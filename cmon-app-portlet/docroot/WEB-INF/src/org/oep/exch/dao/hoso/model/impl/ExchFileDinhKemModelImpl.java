/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.exch.dao.hoso.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.exch.dao.hoso.model.ExchFileDinhKem;
import org.oep.exch.dao.hoso.model.ExchFileDinhKemModel;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the ExchFileDinhKem service. Represents a row in the &quot;exch_filedinhkem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.exch.dao.hoso.model.ExchFileDinhKemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ExchFileDinhKemImpl}.
 * </p>
 *
 * @author NAM
 * @see ExchFileDinhKemImpl
 * @see org.oep.exch.dao.hoso.model.ExchFileDinhKem
 * @see org.oep.exch.dao.hoso.model.ExchFileDinhKemModel
 * @generated
 */
public class ExchFileDinhKemModelImpl extends BaseModelImpl<ExchFileDinhKem>
	implements ExchFileDinhKemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a exch file dinh kem model instance should use the {@link org.oep.exch.dao.hoso.model.ExchFileDinhKem} interface instead.
	 */
	public static final String TABLE_NAME = "exch_filedinhkem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "HOSOTTHCCONGID", Types.BIGINT },
			{ "TenTaiLieuDinhKem", Types.VARCHAR },
			{ "UrlTaiLieuDinhKem", Types.VARCHAR },
			{ "TenFile", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table exch_filedinhkem (ID LONG not null primary key,HOSOTTHCCONGID LONG,TenTaiLieuDinhKem VARCHAR(75) null,UrlTaiLieuDinhKem VARCHAR(75) null,TenFile VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table exch_filedinhkem";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.exch.dao.hoso.model.ExchFileDinhKem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.exch.dao.hoso.model.ExchFileDinhKem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.exch.dao.hoso.model.ExchFileDinhKem"),
			true);
	public static long ONLINEID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.exch.dao.hoso.model.ExchFileDinhKem"));

	public ExchFileDinhKemModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ExchFileDinhKem.class;
	}

	public String getModelClassName() {
		return ExchFileDinhKem.class.getName();
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public long getOnlineId() {
		return _OnlineId;
	}

	public void setOnlineId(long OnlineId) {
		_columnBitmask |= ONLINEID_COLUMN_BITMASK;

		if (!_setOriginalOnlineId) {
			_setOriginalOnlineId = true;

			_originalOnlineId = _OnlineId;
		}

		_OnlineId = OnlineId;
	}

	public long getOriginalOnlineId() {
		return _originalOnlineId;
	}

	public String getTenTaiLieuDinhKem() {
		if (_TenTaiLieuDinhKem == null) {
			return StringPool.BLANK;
		}
		else {
			return _TenTaiLieuDinhKem;
		}
	}

	public void setTenTaiLieuDinhKem(String TenTaiLieuDinhKem) {
		_TenTaiLieuDinhKem = TenTaiLieuDinhKem;
	}

	public String getUrlTaiLieuDinhKem() {
		if (_UrlTaiLieuDinhKem == null) {
			return StringPool.BLANK;
		}
		else {
			return _UrlTaiLieuDinhKem;
		}
	}

	public void setUrlTaiLieuDinhKem(String UrlTaiLieuDinhKem) {
		_UrlTaiLieuDinhKem = UrlTaiLieuDinhKem;
	}

	public String getTenFile() {
		if (_TenFile == null) {
			return StringPool.BLANK;
		}
		else {
			return _TenFile;
		}
	}

	public void setTenFile(String TenFile) {
		_TenFile = TenFile;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExchFileDinhKem toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ExchFileDinhKem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					ExchFileDinhKem.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		ExchFileDinhKemImpl exchFileDinhKemImpl = new ExchFileDinhKemImpl();

		exchFileDinhKemImpl.setId(getId());
		exchFileDinhKemImpl.setOnlineId(getOnlineId());
		exchFileDinhKemImpl.setTenTaiLieuDinhKem(getTenTaiLieuDinhKem());
		exchFileDinhKemImpl.setUrlTaiLieuDinhKem(getUrlTaiLieuDinhKem());
		exchFileDinhKemImpl.setTenFile(getTenFile());

		exchFileDinhKemImpl.resetOriginalValues();

		return exchFileDinhKemImpl;
	}

	public int compareTo(ExchFileDinhKem exchFileDinhKem) {
		long primaryKey = exchFileDinhKem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ExchFileDinhKem exchFileDinhKem = null;

		try {
			exchFileDinhKem = (ExchFileDinhKem)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = exchFileDinhKem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ExchFileDinhKemModelImpl exchFileDinhKemModelImpl = this;

		exchFileDinhKemModelImpl._originalOnlineId = exchFileDinhKemModelImpl._OnlineId;

		exchFileDinhKemModelImpl._setOriginalOnlineId = false;

		exchFileDinhKemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ExchFileDinhKem> toCacheModel() {
		ExchFileDinhKemCacheModel exchFileDinhKemCacheModel = new ExchFileDinhKemCacheModel();

		exchFileDinhKemCacheModel.id = getId();

		exchFileDinhKemCacheModel.OnlineId = getOnlineId();

		exchFileDinhKemCacheModel.TenTaiLieuDinhKem = getTenTaiLieuDinhKem();

		String TenTaiLieuDinhKem = exchFileDinhKemCacheModel.TenTaiLieuDinhKem;

		if ((TenTaiLieuDinhKem != null) && (TenTaiLieuDinhKem.length() == 0)) {
			exchFileDinhKemCacheModel.TenTaiLieuDinhKem = null;
		}

		exchFileDinhKemCacheModel.UrlTaiLieuDinhKem = getUrlTaiLieuDinhKem();

		String UrlTaiLieuDinhKem = exchFileDinhKemCacheModel.UrlTaiLieuDinhKem;

		if ((UrlTaiLieuDinhKem != null) && (UrlTaiLieuDinhKem.length() == 0)) {
			exchFileDinhKemCacheModel.UrlTaiLieuDinhKem = null;
		}

		exchFileDinhKemCacheModel.TenFile = getTenFile();

		String TenFile = exchFileDinhKemCacheModel.TenFile;

		if ((TenFile != null) && (TenFile.length() == 0)) {
			exchFileDinhKemCacheModel.TenFile = null;
		}

		return exchFileDinhKemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", OnlineId=");
		sb.append(getOnlineId());
		sb.append(", TenTaiLieuDinhKem=");
		sb.append(getTenTaiLieuDinhKem());
		sb.append(", UrlTaiLieuDinhKem=");
		sb.append(getUrlTaiLieuDinhKem());
		sb.append(", TenFile=");
		sb.append(getTenFile());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("org.oep.exch.dao.hoso.model.ExchFileDinhKem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>OnlineId</column-name><column-value><![CDATA[");
		sb.append(getOnlineId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TenTaiLieuDinhKem</column-name><column-value><![CDATA[");
		sb.append(getTenTaiLieuDinhKem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>UrlTaiLieuDinhKem</column-name><column-value><![CDATA[");
		sb.append(getUrlTaiLieuDinhKem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TenFile</column-name><column-value><![CDATA[");
		sb.append(getTenFile());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ExchFileDinhKem.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ExchFileDinhKem.class
		};
	private long _id;
	private long _OnlineId;
	private long _originalOnlineId;
	private boolean _setOriginalOnlineId;
	private String _TenTaiLieuDinhKem;
	private String _UrlTaiLieuDinhKem;
	private String _TenFile;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private ExchFileDinhKem _escapedModelProxy;
}