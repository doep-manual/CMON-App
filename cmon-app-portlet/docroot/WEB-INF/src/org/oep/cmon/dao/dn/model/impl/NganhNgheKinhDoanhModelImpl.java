/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.dn.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh;
import org.oep.cmon.dao.dn.model.NganhNgheKinhDoanhModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the NganhNgheKinhDoanh service. Represents a row in the &quot;CMON_NGANHNGHEKINHDOANH&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.cmon.dao.dn.model.NganhNgheKinhDoanhModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NganhNgheKinhDoanhImpl}.
 * </p>
 *
 * @author Liemnn
 * @see NganhNgheKinhDoanhImpl
 * @see org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh
 * @see org.oep.cmon.dao.dn.model.NganhNgheKinhDoanhModel
 * @generated
 */
public class NganhNgheKinhDoanhModelImpl extends BaseModelImpl<NganhNgheKinhDoanh>
	implements NganhNgheKinhDoanhModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a nganh nghe kinh doanh model instance should use the {@link org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh} interface instead.
	 */
	public static final String TABLE_NAME = "CMON_NGANHNGHEKINHDOANH";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "MA", Types.VARCHAR },
			{ "TEN", Types.VARCHAR },
			{ "CHAID", Types.BIGINT },
			{ "NGAYTAO", Types.TIMESTAMP },
			{ "DAXOA", Types.INTEGER },
			{ "NGUOITAO", Types.VARCHAR },
			{ "NGUOISUA", Types.VARCHAR },
			{ "NGAYSUA", Types.TIMESTAMP },
			{ "CAP", Types.BIGINT },
			{ "PHIENBAN", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table CMON_NGANHNGHEKINHDOANH (ID LONG not null primary key,MA VARCHAR(75) null,TEN VARCHAR(75) null,CHAID LONG,NGAYTAO DATE null,DAXOA INTEGER,NGUOITAO VARCHAR(75) null,NGUOISUA VARCHAR(75) null,NGAYSUA DATE null,CAP LONG,PHIENBAN LONG)";
	public static final String TABLE_SQL_DROP = "drop table CMON_NGANHNGHEKINHDOANH";
	public static final String ORDER_BY_JPQL = " ORDER BY nganhNgheKinhDoanh.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMON_NGANHNGHEKINHDOANH.ID ASC";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh"),
			true);
	public static long CAP_COLUMN_BITMASK = 1L;
	public static long DAXOA_COLUMN_BITMASK = 2L;
	public static long MA_COLUMN_BITMASK = 4L;
	public static long TEN_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh"));

	public NganhNgheKinhDoanhModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return NganhNgheKinhDoanh.class;
	}

	public String getModelClassName() {
		return NganhNgheKinhDoanh.class.getName();
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	public String getMa() {
		if (_ma == null) {
			return StringPool.BLANK;
		}
		else {
			return _ma;
		}
	}

	public void setMa(String ma) {
		_columnBitmask |= MA_COLUMN_BITMASK;

		if (_originalMa == null) {
			_originalMa = _ma;
		}

		_ma = ma;
	}

	public String getOriginalMa() {
		return GetterUtil.getString(_originalMa);
	}

	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	public void setTen(String ten) {
		_columnBitmask |= TEN_COLUMN_BITMASK;

		if (_originalTen == null) {
			_originalTen = _ten;
		}

		_ten = ten;
	}

	public String getOriginalTen() {
		return GetterUtil.getString(_originalTen);
	}

	public long getChaId() {
		return _chaId;
	}

	public void setChaId(long chaId) {
		_chaId = chaId;
	}

	public Date getNgayTao() {
		return _ngayTao;
	}

	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	public int getDaXoa() {
		return _daXoa;
	}

	public void setDaXoa(int daXoa) {
		_columnBitmask |= DAXOA_COLUMN_BITMASK;

		if (!_setOriginalDaXoa) {
			_setOriginalDaXoa = true;

			_originalDaXoa = _daXoa;
		}

		_daXoa = daXoa;
	}

	public int getOriginalDaXoa() {
		return _originalDaXoa;
	}

	public String getNguoiTao() {
		if (_nguoiTao == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiTao;
		}
	}

	public void setNguoiTao(String nguoiTao) {
		_nguoiTao = nguoiTao;
	}

	public String getNguoiSua() {
		if (_nguoiSua == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiSua;
		}
	}

	public void setNguoiSua(String nguoiSua) {
		_nguoiSua = nguoiSua;
	}

	public Date getNgaySua() {
		return _ngaySua;
	}

	public void setNgaySua(Date ngaySua) {
		_ngaySua = ngaySua;
	}

	public long getCap() {
		return _cap;
	}

	public void setCap(long cap) {
		_columnBitmask |= CAP_COLUMN_BITMASK;

		if (!_setOriginalCap) {
			_setOriginalCap = true;

			_originalCap = _cap;
		}

		_cap = cap;
	}

	public long getOriginalCap() {
		return _originalCap;
	}

	public long getPhienBan() {
		return _phienBan;
	}

	public void setPhienBan(long phienBan) {
		_phienBan = phienBan;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public NganhNgheKinhDoanh toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (NganhNgheKinhDoanh)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					NganhNgheKinhDoanh.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		NganhNgheKinhDoanhImpl nganhNgheKinhDoanhImpl = new NganhNgheKinhDoanhImpl();

		nganhNgheKinhDoanhImpl.setId(getId());
		nganhNgheKinhDoanhImpl.setMa(getMa());
		nganhNgheKinhDoanhImpl.setTen(getTen());
		nganhNgheKinhDoanhImpl.setChaId(getChaId());
		nganhNgheKinhDoanhImpl.setNgayTao(getNgayTao());
		nganhNgheKinhDoanhImpl.setDaXoa(getDaXoa());
		nganhNgheKinhDoanhImpl.setNguoiTao(getNguoiTao());
		nganhNgheKinhDoanhImpl.setNguoiSua(getNguoiSua());
		nganhNgheKinhDoanhImpl.setNgaySua(getNgaySua());
		nganhNgheKinhDoanhImpl.setCap(getCap());
		nganhNgheKinhDoanhImpl.setPhienBan(getPhienBan());

		nganhNgheKinhDoanhImpl.resetOriginalValues();

		return nganhNgheKinhDoanhImpl;
	}

	public int compareTo(NganhNgheKinhDoanh nganhNgheKinhDoanh) {
		int value = 0;

		if (getId() < nganhNgheKinhDoanh.getId()) {
			value = -1;
		}
		else if (getId() > nganhNgheKinhDoanh.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		NganhNgheKinhDoanh nganhNgheKinhDoanh = null;

		try {
			nganhNgheKinhDoanh = (NganhNgheKinhDoanh)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = nganhNgheKinhDoanh.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		NganhNgheKinhDoanhModelImpl nganhNgheKinhDoanhModelImpl = this;

		nganhNgheKinhDoanhModelImpl._originalMa = nganhNgheKinhDoanhModelImpl._ma;

		nganhNgheKinhDoanhModelImpl._originalTen = nganhNgheKinhDoanhModelImpl._ten;

		nganhNgheKinhDoanhModelImpl._originalDaXoa = nganhNgheKinhDoanhModelImpl._daXoa;

		nganhNgheKinhDoanhModelImpl._setOriginalDaXoa = false;

		nganhNgheKinhDoanhModelImpl._originalCap = nganhNgheKinhDoanhModelImpl._cap;

		nganhNgheKinhDoanhModelImpl._setOriginalCap = false;

		nganhNgheKinhDoanhModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<NganhNgheKinhDoanh> toCacheModel() {
		NganhNgheKinhDoanhCacheModel nganhNgheKinhDoanhCacheModel = new NganhNgheKinhDoanhCacheModel();

		nganhNgheKinhDoanhCacheModel.id = getId();

		nganhNgheKinhDoanhCacheModel.ma = getMa();

		String ma = nganhNgheKinhDoanhCacheModel.ma;

		if ((ma != null) && (ma.length() == 0)) {
			nganhNgheKinhDoanhCacheModel.ma = null;
		}

		nganhNgheKinhDoanhCacheModel.ten = getTen();

		String ten = nganhNgheKinhDoanhCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			nganhNgheKinhDoanhCacheModel.ten = null;
		}

		nganhNgheKinhDoanhCacheModel.chaId = getChaId();

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			nganhNgheKinhDoanhCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			nganhNgheKinhDoanhCacheModel.ngayTao = Long.MIN_VALUE;
		}

		nganhNgheKinhDoanhCacheModel.daXoa = getDaXoa();

		nganhNgheKinhDoanhCacheModel.nguoiTao = getNguoiTao();

		String nguoiTao = nganhNgheKinhDoanhCacheModel.nguoiTao;

		if ((nguoiTao != null) && (nguoiTao.length() == 0)) {
			nganhNgheKinhDoanhCacheModel.nguoiTao = null;
		}

		nganhNgheKinhDoanhCacheModel.nguoiSua = getNguoiSua();

		String nguoiSua = nganhNgheKinhDoanhCacheModel.nguoiSua;

		if ((nguoiSua != null) && (nguoiSua.length() == 0)) {
			nganhNgheKinhDoanhCacheModel.nguoiSua = null;
		}

		Date ngaySua = getNgaySua();

		if (ngaySua != null) {
			nganhNgheKinhDoanhCacheModel.ngaySua = ngaySua.getTime();
		}
		else {
			nganhNgheKinhDoanhCacheModel.ngaySua = Long.MIN_VALUE;
		}

		nganhNgheKinhDoanhCacheModel.cap = getCap();

		nganhNgheKinhDoanhCacheModel.phienBan = getPhienBan();

		return nganhNgheKinhDoanhCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", ma=");
		sb.append(getMa());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", chaId=");
		sb.append(getChaId());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", daXoa=");
		sb.append(getDaXoa());
		sb.append(", nguoiTao=");
		sb.append(getNguoiTao());
		sb.append(", nguoiSua=");
		sb.append(getNguoiSua());
		sb.append(", ngaySua=");
		sb.append(getNgaySua());
		sb.append(", cap=");
		sb.append(getCap());
		sb.append(", phienBan=");
		sb.append(getPhienBan());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("org.oep.cmon.dao.dn.model.NganhNgheKinhDoanh");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ma</column-name><column-value><![CDATA[");
		sb.append(getMa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>chaId</column-name><column-value><![CDATA[");
		sb.append(getChaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>daXoa</column-name><column-value><![CDATA[");
		sb.append(getDaXoa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiTao</column-name><column-value><![CDATA[");
		sb.append(getNguoiTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiSua</column-name><column-value><![CDATA[");
		sb.append(getNguoiSua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngaySua</column-name><column-value><![CDATA[");
		sb.append(getNgaySua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cap</column-name><column-value><![CDATA[");
		sb.append(getCap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phienBan</column-name><column-value><![CDATA[");
		sb.append(getPhienBan());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = NganhNgheKinhDoanh.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			NganhNgheKinhDoanh.class
		};
	private long _id;
	private String _ma;
	private String _originalMa;
	private String _ten;
	private String _originalTen;
	private long _chaId;
	private Date _ngayTao;
	private int _daXoa;
	private int _originalDaXoa;
	private boolean _setOriginalDaXoa;
	private String _nguoiTao;
	private String _nguoiSua;
	private Date _ngaySua;
	private long _cap;
	private long _originalCap;
	private boolean _setOriginalCap;
	private long _phienBan;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private NganhNgheKinhDoanh _escapedModelProxy;
}