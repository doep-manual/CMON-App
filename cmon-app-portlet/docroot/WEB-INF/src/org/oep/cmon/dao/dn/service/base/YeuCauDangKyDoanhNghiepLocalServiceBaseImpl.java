/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.dn.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.search.Indexer;
import com.liferay.portal.kernel.search.IndexerRegistryUtil;
import com.liferay.portal.kernel.search.SearchException;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import org.oep.cmon.dao.dn.model.YeuCauDangKyDoanhNghiep;
import org.oep.cmon.dao.dn.service.DoanhNghiep2NganhNgheLocalService;
import org.oep.cmon.dao.dn.service.DoanhNghiepLocalService;
import org.oep.cmon.dao.dn.service.LoaiDoanhNghiepLocalService;
import org.oep.cmon.dao.dn.service.NganhNgheKinhDoanhLocalService;
import org.oep.cmon.dao.dn.service.TrangThaiDoanhNghiepLocalService;
import org.oep.cmon.dao.dn.service.YeuCauDangKyDNLocalService;
import org.oep.cmon.dao.dn.service.YeuCauDangKyDoanhNghiepLocalService;
import org.oep.cmon.dao.dn.service.persistence.DoanhNghiep2NganhNghePersistence;
import org.oep.cmon.dao.dn.service.persistence.DoanhNghiepFinder;
import org.oep.cmon.dao.dn.service.persistence.DoanhNghiepPersistence;
import org.oep.cmon.dao.dn.service.persistence.LoaiDoanhNghiepPersistence;
import org.oep.cmon.dao.dn.service.persistence.NganhNgheKinhDoanhPersistence;
import org.oep.cmon.dao.dn.service.persistence.TrangThaiDoanhNghiepPersistence;
import org.oep.cmon.dao.dn.service.persistence.YeuCauDangKyDNPersistence;
import org.oep.cmon.dao.dn.service.persistence.YeuCauDangKyDoanhNghiepPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * The base implementation of the yeu cau dang ky doanh nghiep local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link org.oep.cmon.dao.dn.service.impl.YeuCauDangKyDoanhNghiepLocalServiceImpl}.
 * </p>
 *
 * @author Liemnn
 * @see org.oep.cmon.dao.dn.service.impl.YeuCauDangKyDoanhNghiepLocalServiceImpl
 * @see org.oep.cmon.dao.dn.service.YeuCauDangKyDoanhNghiepLocalServiceUtil
 * @generated
 */
public abstract class YeuCauDangKyDoanhNghiepLocalServiceBaseImpl
	implements YeuCauDangKyDoanhNghiepLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link org.oep.cmon.dao.dn.service.YeuCauDangKyDoanhNghiepLocalServiceUtil} to access the yeu cau dang ky doanh nghiep local service.
	 */

	/**
	 * Adds the yeu cau dang ky doanh nghiep to the database. Also notifies the appropriate model listeners.
	 *
	 * @param yeuCauDangKyDoanhNghiep the yeu cau dang ky doanh nghiep
	 * @return the yeu cau dang ky doanh nghiep that was added
	 * @throws SystemException if a system exception occurred
	 */
	public YeuCauDangKyDoanhNghiep addYeuCauDangKyDoanhNghiep(
		YeuCauDangKyDoanhNghiep yeuCauDangKyDoanhNghiep)
		throws SystemException {
		yeuCauDangKyDoanhNghiep.setNew(true);

		yeuCauDangKyDoanhNghiep = yeuCauDangKyDoanhNghiepPersistence.update(yeuCauDangKyDoanhNghiep,
				false);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.reindex(yeuCauDangKyDoanhNghiep);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}

		return yeuCauDangKyDoanhNghiep;
	}

	/**
	 * Creates a new yeu cau dang ky doanh nghiep with the primary key. Does not add the yeu cau dang ky doanh nghiep to the database.
	 *
	 * @param id the primary key for the new yeu cau dang ky doanh nghiep
	 * @return the new yeu cau dang ky doanh nghiep
	 */
	public YeuCauDangKyDoanhNghiep createYeuCauDangKyDoanhNghiep(long id) {
		return yeuCauDangKyDoanhNghiepPersistence.create(id);
	}

	/**
	 * Deletes the yeu cau dang ky doanh nghiep with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the yeu cau dang ky doanh nghiep
	 * @throws PortalException if a yeu cau dang ky doanh nghiep with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteYeuCauDangKyDoanhNghiep(long id)
		throws PortalException, SystemException {
		YeuCauDangKyDoanhNghiep yeuCauDangKyDoanhNghiep = yeuCauDangKyDoanhNghiepPersistence.remove(id);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.delete(yeuCauDangKyDoanhNghiep);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}
	}

	/**
	 * Deletes the yeu cau dang ky doanh nghiep from the database. Also notifies the appropriate model listeners.
	 *
	 * @param yeuCauDangKyDoanhNghiep the yeu cau dang ky doanh nghiep
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteYeuCauDangKyDoanhNghiep(
		YeuCauDangKyDoanhNghiep yeuCauDangKyDoanhNghiep)
		throws SystemException {
		yeuCauDangKyDoanhNghiepPersistence.remove(yeuCauDangKyDoanhNghiep);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.delete(yeuCauDangKyDoanhNghiep);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.countWithDynamicQuery(dynamicQuery);
	}

	public YeuCauDangKyDoanhNghiep fetchYeuCauDangKyDoanhNghiep(long id)
		throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the yeu cau dang ky doanh nghiep with the primary key.
	 *
	 * @param id the primary key of the yeu cau dang ky doanh nghiep
	 * @return the yeu cau dang ky doanh nghiep
	 * @throws PortalException if a yeu cau dang ky doanh nghiep with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public YeuCauDangKyDoanhNghiep getYeuCauDangKyDoanhNghiep(long id)
		throws PortalException, SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.findByPrimaryKey(id);
	}

	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the yeu cau dang ky doanh nghieps.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param start the lower bound of the range of yeu cau dang ky doanh nghieps
	 * @param end the upper bound of the range of yeu cau dang ky doanh nghieps (not inclusive)
	 * @return the range of yeu cau dang ky doanh nghieps
	 * @throws SystemException if a system exception occurred
	 */
	public List<YeuCauDangKyDoanhNghiep> getYeuCauDangKyDoanhNghieps(
		int start, int end) throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of yeu cau dang ky doanh nghieps.
	 *
	 * @return the number of yeu cau dang ky doanh nghieps
	 * @throws SystemException if a system exception occurred
	 */
	public int getYeuCauDangKyDoanhNghiepsCount() throws SystemException {
		return yeuCauDangKyDoanhNghiepPersistence.countAll();
	}

	/**
	 * Updates the yeu cau dang ky doanh nghiep in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param yeuCauDangKyDoanhNghiep the yeu cau dang ky doanh nghiep
	 * @return the yeu cau dang ky doanh nghiep that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public YeuCauDangKyDoanhNghiep updateYeuCauDangKyDoanhNghiep(
		YeuCauDangKyDoanhNghiep yeuCauDangKyDoanhNghiep)
		throws SystemException {
		return updateYeuCauDangKyDoanhNghiep(yeuCauDangKyDoanhNghiep, true);
	}

	/**
	 * Updates the yeu cau dang ky doanh nghiep in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param yeuCauDangKyDoanhNghiep the yeu cau dang ky doanh nghiep
	 * @param merge whether to merge the yeu cau dang ky doanh nghiep with the current session. See {@link com.liferay.portal.service.persistence.BatchSession#update(com.liferay.portal.kernel.dao.orm.Session, com.liferay.portal.model.BaseModel, boolean)} for an explanation.
	 * @return the yeu cau dang ky doanh nghiep that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public YeuCauDangKyDoanhNghiep updateYeuCauDangKyDoanhNghiep(
		YeuCauDangKyDoanhNghiep yeuCauDangKyDoanhNghiep, boolean merge)
		throws SystemException {
		yeuCauDangKyDoanhNghiep.setNew(false);

		yeuCauDangKyDoanhNghiep = yeuCauDangKyDoanhNghiepPersistence.update(yeuCauDangKyDoanhNghiep,
				merge);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.reindex(yeuCauDangKyDoanhNghiep);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}

		return yeuCauDangKyDoanhNghiep;
	}

	/**
	 * Returns the doanh nghiep local service.
	 *
	 * @return the doanh nghiep local service
	 */
	public DoanhNghiepLocalService getDoanhNghiepLocalService() {
		return doanhNghiepLocalService;
	}

	/**
	 * Sets the doanh nghiep local service.
	 *
	 * @param doanhNghiepLocalService the doanh nghiep local service
	 */
	public void setDoanhNghiepLocalService(
		DoanhNghiepLocalService doanhNghiepLocalService) {
		this.doanhNghiepLocalService = doanhNghiepLocalService;
	}

	/**
	 * Returns the doanh nghiep persistence.
	 *
	 * @return the doanh nghiep persistence
	 */
	public DoanhNghiepPersistence getDoanhNghiepPersistence() {
		return doanhNghiepPersistence;
	}

	/**
	 * Sets the doanh nghiep persistence.
	 *
	 * @param doanhNghiepPersistence the doanh nghiep persistence
	 */
	public void setDoanhNghiepPersistence(
		DoanhNghiepPersistence doanhNghiepPersistence) {
		this.doanhNghiepPersistence = doanhNghiepPersistence;
	}

	/**
	 * Returns the doanh nghiep finder.
	 *
	 * @return the doanh nghiep finder
	 */
	public DoanhNghiepFinder getDoanhNghiepFinder() {
		return doanhNghiepFinder;
	}

	/**
	 * Sets the doanh nghiep finder.
	 *
	 * @param doanhNghiepFinder the doanh nghiep finder
	 */
	public void setDoanhNghiepFinder(DoanhNghiepFinder doanhNghiepFinder) {
		this.doanhNghiepFinder = doanhNghiepFinder;
	}

	/**
	 * Returns the doanh nghiep2 nganh nghe local service.
	 *
	 * @return the doanh nghiep2 nganh nghe local service
	 */
	public DoanhNghiep2NganhNgheLocalService getDoanhNghiep2NganhNgheLocalService() {
		return doanhNghiep2NganhNgheLocalService;
	}

	/**
	 * Sets the doanh nghiep2 nganh nghe local service.
	 *
	 * @param doanhNghiep2NganhNgheLocalService the doanh nghiep2 nganh nghe local service
	 */
	public void setDoanhNghiep2NganhNgheLocalService(
		DoanhNghiep2NganhNgheLocalService doanhNghiep2NganhNgheLocalService) {
		this.doanhNghiep2NganhNgheLocalService = doanhNghiep2NganhNgheLocalService;
	}

	/**
	 * Returns the doanh nghiep2 nganh nghe persistence.
	 *
	 * @return the doanh nghiep2 nganh nghe persistence
	 */
	public DoanhNghiep2NganhNghePersistence getDoanhNghiep2NganhNghePersistence() {
		return doanhNghiep2NganhNghePersistence;
	}

	/**
	 * Sets the doanh nghiep2 nganh nghe persistence.
	 *
	 * @param doanhNghiep2NganhNghePersistence the doanh nghiep2 nganh nghe persistence
	 */
	public void setDoanhNghiep2NganhNghePersistence(
		DoanhNghiep2NganhNghePersistence doanhNghiep2NganhNghePersistence) {
		this.doanhNghiep2NganhNghePersistence = doanhNghiep2NganhNghePersistence;
	}

	/**
	 * Returns the loai doanh nghiep local service.
	 *
	 * @return the loai doanh nghiep local service
	 */
	public LoaiDoanhNghiepLocalService getLoaiDoanhNghiepLocalService() {
		return loaiDoanhNghiepLocalService;
	}

	/**
	 * Sets the loai doanh nghiep local service.
	 *
	 * @param loaiDoanhNghiepLocalService the loai doanh nghiep local service
	 */
	public void setLoaiDoanhNghiepLocalService(
		LoaiDoanhNghiepLocalService loaiDoanhNghiepLocalService) {
		this.loaiDoanhNghiepLocalService = loaiDoanhNghiepLocalService;
	}

	/**
	 * Returns the loai doanh nghiep persistence.
	 *
	 * @return the loai doanh nghiep persistence
	 */
	public LoaiDoanhNghiepPersistence getLoaiDoanhNghiepPersistence() {
		return loaiDoanhNghiepPersistence;
	}

	/**
	 * Sets the loai doanh nghiep persistence.
	 *
	 * @param loaiDoanhNghiepPersistence the loai doanh nghiep persistence
	 */
	public void setLoaiDoanhNghiepPersistence(
		LoaiDoanhNghiepPersistence loaiDoanhNghiepPersistence) {
		this.loaiDoanhNghiepPersistence = loaiDoanhNghiepPersistence;
	}

	/**
	 * Returns the nganh nghe kinh doanh local service.
	 *
	 * @return the nganh nghe kinh doanh local service
	 */
	public NganhNgheKinhDoanhLocalService getNganhNgheKinhDoanhLocalService() {
		return nganhNgheKinhDoanhLocalService;
	}

	/**
	 * Sets the nganh nghe kinh doanh local service.
	 *
	 * @param nganhNgheKinhDoanhLocalService the nganh nghe kinh doanh local service
	 */
	public void setNganhNgheKinhDoanhLocalService(
		NganhNgheKinhDoanhLocalService nganhNgheKinhDoanhLocalService) {
		this.nganhNgheKinhDoanhLocalService = nganhNgheKinhDoanhLocalService;
	}

	/**
	 * Returns the nganh nghe kinh doanh persistence.
	 *
	 * @return the nganh nghe kinh doanh persistence
	 */
	public NganhNgheKinhDoanhPersistence getNganhNgheKinhDoanhPersistence() {
		return nganhNgheKinhDoanhPersistence;
	}

	/**
	 * Sets the nganh nghe kinh doanh persistence.
	 *
	 * @param nganhNgheKinhDoanhPersistence the nganh nghe kinh doanh persistence
	 */
	public void setNganhNgheKinhDoanhPersistence(
		NganhNgheKinhDoanhPersistence nganhNgheKinhDoanhPersistence) {
		this.nganhNgheKinhDoanhPersistence = nganhNgheKinhDoanhPersistence;
	}

	/**
	 * Returns the trang thai doanh nghiep local service.
	 *
	 * @return the trang thai doanh nghiep local service
	 */
	public TrangThaiDoanhNghiepLocalService getTrangThaiDoanhNghiepLocalService() {
		return trangThaiDoanhNghiepLocalService;
	}

	/**
	 * Sets the trang thai doanh nghiep local service.
	 *
	 * @param trangThaiDoanhNghiepLocalService the trang thai doanh nghiep local service
	 */
	public void setTrangThaiDoanhNghiepLocalService(
		TrangThaiDoanhNghiepLocalService trangThaiDoanhNghiepLocalService) {
		this.trangThaiDoanhNghiepLocalService = trangThaiDoanhNghiepLocalService;
	}

	/**
	 * Returns the trang thai doanh nghiep persistence.
	 *
	 * @return the trang thai doanh nghiep persistence
	 */
	public TrangThaiDoanhNghiepPersistence getTrangThaiDoanhNghiepPersistence() {
		return trangThaiDoanhNghiepPersistence;
	}

	/**
	 * Sets the trang thai doanh nghiep persistence.
	 *
	 * @param trangThaiDoanhNghiepPersistence the trang thai doanh nghiep persistence
	 */
	public void setTrangThaiDoanhNghiepPersistence(
		TrangThaiDoanhNghiepPersistence trangThaiDoanhNghiepPersistence) {
		this.trangThaiDoanhNghiepPersistence = trangThaiDoanhNghiepPersistence;
	}

	/**
	 * Returns the yeu cau dang ky d n local service.
	 *
	 * @return the yeu cau dang ky d n local service
	 */
	public YeuCauDangKyDNLocalService getYeuCauDangKyDNLocalService() {
		return yeuCauDangKyDNLocalService;
	}

	/**
	 * Sets the yeu cau dang ky d n local service.
	 *
	 * @param yeuCauDangKyDNLocalService the yeu cau dang ky d n local service
	 */
	public void setYeuCauDangKyDNLocalService(
		YeuCauDangKyDNLocalService yeuCauDangKyDNLocalService) {
		this.yeuCauDangKyDNLocalService = yeuCauDangKyDNLocalService;
	}

	/**
	 * Returns the yeu cau dang ky d n persistence.
	 *
	 * @return the yeu cau dang ky d n persistence
	 */
	public YeuCauDangKyDNPersistence getYeuCauDangKyDNPersistence() {
		return yeuCauDangKyDNPersistence;
	}

	/**
	 * Sets the yeu cau dang ky d n persistence.
	 *
	 * @param yeuCauDangKyDNPersistence the yeu cau dang ky d n persistence
	 */
	public void setYeuCauDangKyDNPersistence(
		YeuCauDangKyDNPersistence yeuCauDangKyDNPersistence) {
		this.yeuCauDangKyDNPersistence = yeuCauDangKyDNPersistence;
	}

	/**
	 * Returns the yeu cau dang ky doanh nghiep local service.
	 *
	 * @return the yeu cau dang ky doanh nghiep local service
	 */
	public YeuCauDangKyDoanhNghiepLocalService getYeuCauDangKyDoanhNghiepLocalService() {
		return yeuCauDangKyDoanhNghiepLocalService;
	}

	/**
	 * Sets the yeu cau dang ky doanh nghiep local service.
	 *
	 * @param yeuCauDangKyDoanhNghiepLocalService the yeu cau dang ky doanh nghiep local service
	 */
	public void setYeuCauDangKyDoanhNghiepLocalService(
		YeuCauDangKyDoanhNghiepLocalService yeuCauDangKyDoanhNghiepLocalService) {
		this.yeuCauDangKyDoanhNghiepLocalService = yeuCauDangKyDoanhNghiepLocalService;
	}

	/**
	 * Returns the yeu cau dang ky doanh nghiep persistence.
	 *
	 * @return the yeu cau dang ky doanh nghiep persistence
	 */
	public YeuCauDangKyDoanhNghiepPersistence getYeuCauDangKyDoanhNghiepPersistence() {
		return yeuCauDangKyDoanhNghiepPersistence;
	}

	/**
	 * Sets the yeu cau dang ky doanh nghiep persistence.
	 *
	 * @param yeuCauDangKyDoanhNghiepPersistence the yeu cau dang ky doanh nghiep persistence
	 */
	public void setYeuCauDangKyDoanhNghiepPersistence(
		YeuCauDangKyDoanhNghiepPersistence yeuCauDangKyDoanhNghiepPersistence) {
		this.yeuCauDangKyDoanhNghiepPersistence = yeuCauDangKyDoanhNghiepPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		PersistedModelLocalServiceRegistryUtil.register("org.oep.cmon.dao.dn.model.YeuCauDangKyDoanhNghiep",
			yeuCauDangKyDoanhNghiepLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"org.oep.cmon.dao.dn.model.YeuCauDangKyDoanhNghiep");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return YeuCauDangKyDoanhNghiep.class;
	}

	protected String getModelClassName() {
		return YeuCauDangKyDoanhNghiep.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = yeuCauDangKyDoanhNghiepPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = DoanhNghiepLocalService.class)
	protected DoanhNghiepLocalService doanhNghiepLocalService;
	@BeanReference(type = DoanhNghiepPersistence.class)
	protected DoanhNghiepPersistence doanhNghiepPersistence;
	@BeanReference(type = DoanhNghiepFinder.class)
	protected DoanhNghiepFinder doanhNghiepFinder;
	@BeanReference(type = DoanhNghiep2NganhNgheLocalService.class)
	protected DoanhNghiep2NganhNgheLocalService doanhNghiep2NganhNgheLocalService;
	@BeanReference(type = DoanhNghiep2NganhNghePersistence.class)
	protected DoanhNghiep2NganhNghePersistence doanhNghiep2NganhNghePersistence;
	@BeanReference(type = LoaiDoanhNghiepLocalService.class)
	protected LoaiDoanhNghiepLocalService loaiDoanhNghiepLocalService;
	@BeanReference(type = LoaiDoanhNghiepPersistence.class)
	protected LoaiDoanhNghiepPersistence loaiDoanhNghiepPersistence;
	@BeanReference(type = NganhNgheKinhDoanhLocalService.class)
	protected NganhNgheKinhDoanhLocalService nganhNgheKinhDoanhLocalService;
	@BeanReference(type = NganhNgheKinhDoanhPersistence.class)
	protected NganhNgheKinhDoanhPersistence nganhNgheKinhDoanhPersistence;
	@BeanReference(type = TrangThaiDoanhNghiepLocalService.class)
	protected TrangThaiDoanhNghiepLocalService trangThaiDoanhNghiepLocalService;
	@BeanReference(type = TrangThaiDoanhNghiepPersistence.class)
	protected TrangThaiDoanhNghiepPersistence trangThaiDoanhNghiepPersistence;
	@BeanReference(type = YeuCauDangKyDNLocalService.class)
	protected YeuCauDangKyDNLocalService yeuCauDangKyDNLocalService;
	@BeanReference(type = YeuCauDangKyDNPersistence.class)
	protected YeuCauDangKyDNPersistence yeuCauDangKyDNPersistence;
	@BeanReference(type = YeuCauDangKyDoanhNghiepLocalService.class)
	protected YeuCauDangKyDoanhNghiepLocalService yeuCauDangKyDoanhNghiepLocalService;
	@BeanReference(type = YeuCauDangKyDoanhNghiepPersistence.class)
	protected YeuCauDangKyDoanhNghiepPersistence yeuCauDangKyDoanhNghiepPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private static Log _log = LogFactoryUtil.getLog(YeuCauDangKyDoanhNghiepLocalServiceBaseImpl.class);
	private String _beanIdentifier;
}