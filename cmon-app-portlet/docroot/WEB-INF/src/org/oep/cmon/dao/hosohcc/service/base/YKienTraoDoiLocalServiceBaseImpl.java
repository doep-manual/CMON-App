/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.hosohcc.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.search.Indexer;
import com.liferay.portal.kernel.search.IndexerRegistryUtil;
import com.liferay.portal.kernel.search.SearchException;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import org.oep.cmon.dao.hosohcc.model.YKienTraoDoi;
import org.oep.cmon.dao.hosohcc.service.FileDinhKemLocalService;
import org.oep.cmon.dao.hosohcc.service.FileDinhKemService;
import org.oep.cmon.dao.hosohcc.service.HoSoAnhXaLocalService;
import org.oep.cmon.dao.hosohcc.service.HoSoTTHCCongLocalService;
import org.oep.cmon.dao.hosohcc.service.HoSoTTHCCongService;
import org.oep.cmon.dao.hosohcc.service.TrangThaiHoSoLocalService;
import org.oep.cmon.dao.hosohcc.service.YKienTraoDoiLocalService;
import org.oep.cmon.dao.hosohcc.service.persistence.FileDinhKemFinder;
import org.oep.cmon.dao.hosohcc.service.persistence.FileDinhKemPersistence;
import org.oep.cmon.dao.hosohcc.service.persistence.HoSoAnhXaPersistence;
import org.oep.cmon.dao.hosohcc.service.persistence.HoSoTTHCCongFinder;
import org.oep.cmon.dao.hosohcc.service.persistence.HoSoTTHCCongPersistence;
import org.oep.cmon.dao.hosohcc.service.persistence.TrangThaiHoSoPersistence;
import org.oep.cmon.dao.hosohcc.service.persistence.YKienTraoDoiFinder;
import org.oep.cmon.dao.hosohcc.service.persistence.YKienTraoDoiPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * The base implementation of the y kien trao doi local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link org.oep.cmon.dao.hosohcc.service.impl.YKienTraoDoiLocalServiceImpl}.
 * </p>
 *
 * @author LIEMNn
 * @see org.oep.cmon.dao.hosohcc.service.impl.YKienTraoDoiLocalServiceImpl
 * @see org.oep.cmon.dao.hosohcc.service.YKienTraoDoiLocalServiceUtil
 * @generated
 */
public abstract class YKienTraoDoiLocalServiceBaseImpl
	implements YKienTraoDoiLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link org.oep.cmon.dao.hosohcc.service.YKienTraoDoiLocalServiceUtil} to access the y kien trao doi local service.
	 */

	/**
	 * Adds the y kien trao doi to the database. Also notifies the appropriate model listeners.
	 *
	 * @param yKienTraoDoi the y kien trao doi
	 * @return the y kien trao doi that was added
	 * @throws SystemException if a system exception occurred
	 */
	public YKienTraoDoi addYKienTraoDoi(YKienTraoDoi yKienTraoDoi)
		throws SystemException {
		yKienTraoDoi.setNew(true);

		yKienTraoDoi = yKienTraoDoiPersistence.update(yKienTraoDoi, false);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.reindex(yKienTraoDoi);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}

		return yKienTraoDoi;
	}

	/**
	 * Creates a new y kien trao doi with the primary key. Does not add the y kien trao doi to the database.
	 *
	 * @param id the primary key for the new y kien trao doi
	 * @return the new y kien trao doi
	 */
	public YKienTraoDoi createYKienTraoDoi(long id) {
		return yKienTraoDoiPersistence.create(id);
	}

	/**
	 * Deletes the y kien trao doi with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the y kien trao doi
	 * @throws PortalException if a y kien trao doi with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteYKienTraoDoi(long id)
		throws PortalException, SystemException {
		YKienTraoDoi yKienTraoDoi = yKienTraoDoiPersistence.remove(id);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.delete(yKienTraoDoi);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}
	}

	/**
	 * Deletes the y kien trao doi from the database. Also notifies the appropriate model listeners.
	 *
	 * @param yKienTraoDoi the y kien trao doi
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteYKienTraoDoi(YKienTraoDoi yKienTraoDoi)
		throws SystemException {
		yKienTraoDoiPersistence.remove(yKienTraoDoi);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.delete(yKienTraoDoi);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return yKienTraoDoiPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return yKienTraoDoiPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return yKienTraoDoiPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return yKienTraoDoiPersistence.countWithDynamicQuery(dynamicQuery);
	}

	public YKienTraoDoi fetchYKienTraoDoi(long id) throws SystemException {
		return yKienTraoDoiPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the y kien trao doi with the primary key.
	 *
	 * @param id the primary key of the y kien trao doi
	 * @return the y kien trao doi
	 * @throws PortalException if a y kien trao doi with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public YKienTraoDoi getYKienTraoDoi(long id)
		throws PortalException, SystemException {
		return yKienTraoDoiPersistence.findByPrimaryKey(id);
	}

	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return yKienTraoDoiPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the y kien trao dois.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param start the lower bound of the range of y kien trao dois
	 * @param end the upper bound of the range of y kien trao dois (not inclusive)
	 * @return the range of y kien trao dois
	 * @throws SystemException if a system exception occurred
	 */
	public List<YKienTraoDoi> getYKienTraoDois(int start, int end)
		throws SystemException {
		return yKienTraoDoiPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of y kien trao dois.
	 *
	 * @return the number of y kien trao dois
	 * @throws SystemException if a system exception occurred
	 */
	public int getYKienTraoDoisCount() throws SystemException {
		return yKienTraoDoiPersistence.countAll();
	}

	/**
	 * Updates the y kien trao doi in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param yKienTraoDoi the y kien trao doi
	 * @return the y kien trao doi that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public YKienTraoDoi updateYKienTraoDoi(YKienTraoDoi yKienTraoDoi)
		throws SystemException {
		return updateYKienTraoDoi(yKienTraoDoi, true);
	}

	/**
	 * Updates the y kien trao doi in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param yKienTraoDoi the y kien trao doi
	 * @param merge whether to merge the y kien trao doi with the current session. See {@link com.liferay.portal.service.persistence.BatchSession#update(com.liferay.portal.kernel.dao.orm.Session, com.liferay.portal.model.BaseModel, boolean)} for an explanation.
	 * @return the y kien trao doi that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public YKienTraoDoi updateYKienTraoDoi(YKienTraoDoi yKienTraoDoi,
		boolean merge) throws SystemException {
		yKienTraoDoi.setNew(false);

		yKienTraoDoi = yKienTraoDoiPersistence.update(yKienTraoDoi, merge);

		Indexer indexer = IndexerRegistryUtil.getIndexer(getModelClassName());

		if (indexer != null) {
			try {
				indexer.reindex(yKienTraoDoi);
			}
			catch (SearchException se) {
				if (_log.isWarnEnabled()) {
					_log.warn(se, se);
				}
			}
		}

		return yKienTraoDoi;
	}

	/**
	 * Returns the file dinh kem local service.
	 *
	 * @return the file dinh kem local service
	 */
	public FileDinhKemLocalService getFileDinhKemLocalService() {
		return fileDinhKemLocalService;
	}

	/**
	 * Sets the file dinh kem local service.
	 *
	 * @param fileDinhKemLocalService the file dinh kem local service
	 */
	public void setFileDinhKemLocalService(
		FileDinhKemLocalService fileDinhKemLocalService) {
		this.fileDinhKemLocalService = fileDinhKemLocalService;
	}

	/**
	 * Returns the file dinh kem remote service.
	 *
	 * @return the file dinh kem remote service
	 */
	public FileDinhKemService getFileDinhKemService() {
		return fileDinhKemService;
	}

	/**
	 * Sets the file dinh kem remote service.
	 *
	 * @param fileDinhKemService the file dinh kem remote service
	 */
	public void setFileDinhKemService(FileDinhKemService fileDinhKemService) {
		this.fileDinhKemService = fileDinhKemService;
	}

	/**
	 * Returns the file dinh kem persistence.
	 *
	 * @return the file dinh kem persistence
	 */
	public FileDinhKemPersistence getFileDinhKemPersistence() {
		return fileDinhKemPersistence;
	}

	/**
	 * Sets the file dinh kem persistence.
	 *
	 * @param fileDinhKemPersistence the file dinh kem persistence
	 */
	public void setFileDinhKemPersistence(
		FileDinhKemPersistence fileDinhKemPersistence) {
		this.fileDinhKemPersistence = fileDinhKemPersistence;
	}

	/**
	 * Returns the file dinh kem finder.
	 *
	 * @return the file dinh kem finder
	 */
	public FileDinhKemFinder getFileDinhKemFinder() {
		return fileDinhKemFinder;
	}

	/**
	 * Sets the file dinh kem finder.
	 *
	 * @param fileDinhKemFinder the file dinh kem finder
	 */
	public void setFileDinhKemFinder(FileDinhKemFinder fileDinhKemFinder) {
		this.fileDinhKemFinder = fileDinhKemFinder;
	}

	/**
	 * Returns the ho so anh xa local service.
	 *
	 * @return the ho so anh xa local service
	 */
	public HoSoAnhXaLocalService getHoSoAnhXaLocalService() {
		return hoSoAnhXaLocalService;
	}

	/**
	 * Sets the ho so anh xa local service.
	 *
	 * @param hoSoAnhXaLocalService the ho so anh xa local service
	 */
	public void setHoSoAnhXaLocalService(
		HoSoAnhXaLocalService hoSoAnhXaLocalService) {
		this.hoSoAnhXaLocalService = hoSoAnhXaLocalService;
	}

	/**
	 * Returns the ho so anh xa persistence.
	 *
	 * @return the ho so anh xa persistence
	 */
	public HoSoAnhXaPersistence getHoSoAnhXaPersistence() {
		return hoSoAnhXaPersistence;
	}

	/**
	 * Sets the ho so anh xa persistence.
	 *
	 * @param hoSoAnhXaPersistence the ho so anh xa persistence
	 */
	public void setHoSoAnhXaPersistence(
		HoSoAnhXaPersistence hoSoAnhXaPersistence) {
		this.hoSoAnhXaPersistence = hoSoAnhXaPersistence;
	}

	/**
	 * Returns the ho so t t h c cong local service.
	 *
	 * @return the ho so t t h c cong local service
	 */
	public HoSoTTHCCongLocalService getHoSoTTHCCongLocalService() {
		return hoSoTTHCCongLocalService;
	}

	/**
	 * Sets the ho so t t h c cong local service.
	 *
	 * @param hoSoTTHCCongLocalService the ho so t t h c cong local service
	 */
	public void setHoSoTTHCCongLocalService(
		HoSoTTHCCongLocalService hoSoTTHCCongLocalService) {
		this.hoSoTTHCCongLocalService = hoSoTTHCCongLocalService;
	}

	/**
	 * Returns the ho so t t h c cong remote service.
	 *
	 * @return the ho so t t h c cong remote service
	 */
	public HoSoTTHCCongService getHoSoTTHCCongService() {
		return hoSoTTHCCongService;
	}

	/**
	 * Sets the ho so t t h c cong remote service.
	 *
	 * @param hoSoTTHCCongService the ho so t t h c cong remote service
	 */
	public void setHoSoTTHCCongService(HoSoTTHCCongService hoSoTTHCCongService) {
		this.hoSoTTHCCongService = hoSoTTHCCongService;
	}

	/**
	 * Returns the ho so t t h c cong persistence.
	 *
	 * @return the ho so t t h c cong persistence
	 */
	public HoSoTTHCCongPersistence getHoSoTTHCCongPersistence() {
		return hoSoTTHCCongPersistence;
	}

	/**
	 * Sets the ho so t t h c cong persistence.
	 *
	 * @param hoSoTTHCCongPersistence the ho so t t h c cong persistence
	 */
	public void setHoSoTTHCCongPersistence(
		HoSoTTHCCongPersistence hoSoTTHCCongPersistence) {
		this.hoSoTTHCCongPersistence = hoSoTTHCCongPersistence;
	}

	/**
	 * Returns the ho so t t h c cong finder.
	 *
	 * @return the ho so t t h c cong finder
	 */
	public HoSoTTHCCongFinder getHoSoTTHCCongFinder() {
		return hoSoTTHCCongFinder;
	}

	/**
	 * Sets the ho so t t h c cong finder.
	 *
	 * @param hoSoTTHCCongFinder the ho so t t h c cong finder
	 */
	public void setHoSoTTHCCongFinder(HoSoTTHCCongFinder hoSoTTHCCongFinder) {
		this.hoSoTTHCCongFinder = hoSoTTHCCongFinder;
	}

	/**
	 * Returns the trang thai ho so local service.
	 *
	 * @return the trang thai ho so local service
	 */
	public TrangThaiHoSoLocalService getTrangThaiHoSoLocalService() {
		return trangThaiHoSoLocalService;
	}

	/**
	 * Sets the trang thai ho so local service.
	 *
	 * @param trangThaiHoSoLocalService the trang thai ho so local service
	 */
	public void setTrangThaiHoSoLocalService(
		TrangThaiHoSoLocalService trangThaiHoSoLocalService) {
		this.trangThaiHoSoLocalService = trangThaiHoSoLocalService;
	}

	/**
	 * Returns the trang thai ho so persistence.
	 *
	 * @return the trang thai ho so persistence
	 */
	public TrangThaiHoSoPersistence getTrangThaiHoSoPersistence() {
		return trangThaiHoSoPersistence;
	}

	/**
	 * Sets the trang thai ho so persistence.
	 *
	 * @param trangThaiHoSoPersistence the trang thai ho so persistence
	 */
	public void setTrangThaiHoSoPersistence(
		TrangThaiHoSoPersistence trangThaiHoSoPersistence) {
		this.trangThaiHoSoPersistence = trangThaiHoSoPersistence;
	}

	/**
	 * Returns the y kien trao doi local service.
	 *
	 * @return the y kien trao doi local service
	 */
	public YKienTraoDoiLocalService getYKienTraoDoiLocalService() {
		return yKienTraoDoiLocalService;
	}

	/**
	 * Sets the y kien trao doi local service.
	 *
	 * @param yKienTraoDoiLocalService the y kien trao doi local service
	 */
	public void setYKienTraoDoiLocalService(
		YKienTraoDoiLocalService yKienTraoDoiLocalService) {
		this.yKienTraoDoiLocalService = yKienTraoDoiLocalService;
	}

	/**
	 * Returns the y kien trao doi persistence.
	 *
	 * @return the y kien trao doi persistence
	 */
	public YKienTraoDoiPersistence getYKienTraoDoiPersistence() {
		return yKienTraoDoiPersistence;
	}

	/**
	 * Sets the y kien trao doi persistence.
	 *
	 * @param yKienTraoDoiPersistence the y kien trao doi persistence
	 */
	public void setYKienTraoDoiPersistence(
		YKienTraoDoiPersistence yKienTraoDoiPersistence) {
		this.yKienTraoDoiPersistence = yKienTraoDoiPersistence;
	}

	/**
	 * Returns the y kien trao doi finder.
	 *
	 * @return the y kien trao doi finder
	 */
	public YKienTraoDoiFinder getYKienTraoDoiFinder() {
		return yKienTraoDoiFinder;
	}

	/**
	 * Sets the y kien trao doi finder.
	 *
	 * @param yKienTraoDoiFinder the y kien trao doi finder
	 */
	public void setYKienTraoDoiFinder(YKienTraoDoiFinder yKienTraoDoiFinder) {
		this.yKienTraoDoiFinder = yKienTraoDoiFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		PersistedModelLocalServiceRegistryUtil.register("org.oep.cmon.dao.hosohcc.model.YKienTraoDoi",
			yKienTraoDoiLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"org.oep.cmon.dao.hosohcc.model.YKienTraoDoi");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return YKienTraoDoi.class;
	}

	protected String getModelClassName() {
		return YKienTraoDoi.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = yKienTraoDoiPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = FileDinhKemLocalService.class)
	protected FileDinhKemLocalService fileDinhKemLocalService;
	@BeanReference(type = FileDinhKemService.class)
	protected FileDinhKemService fileDinhKemService;
	@BeanReference(type = FileDinhKemPersistence.class)
	protected FileDinhKemPersistence fileDinhKemPersistence;
	@BeanReference(type = FileDinhKemFinder.class)
	protected FileDinhKemFinder fileDinhKemFinder;
	@BeanReference(type = HoSoAnhXaLocalService.class)
	protected HoSoAnhXaLocalService hoSoAnhXaLocalService;
	@BeanReference(type = HoSoAnhXaPersistence.class)
	protected HoSoAnhXaPersistence hoSoAnhXaPersistence;
	@BeanReference(type = HoSoTTHCCongLocalService.class)
	protected HoSoTTHCCongLocalService hoSoTTHCCongLocalService;
	@BeanReference(type = HoSoTTHCCongService.class)
	protected HoSoTTHCCongService hoSoTTHCCongService;
	@BeanReference(type = HoSoTTHCCongPersistence.class)
	protected HoSoTTHCCongPersistence hoSoTTHCCongPersistence;
	@BeanReference(type = HoSoTTHCCongFinder.class)
	protected HoSoTTHCCongFinder hoSoTTHCCongFinder;
	@BeanReference(type = TrangThaiHoSoLocalService.class)
	protected TrangThaiHoSoLocalService trangThaiHoSoLocalService;
	@BeanReference(type = TrangThaiHoSoPersistence.class)
	protected TrangThaiHoSoPersistence trangThaiHoSoPersistence;
	@BeanReference(type = YKienTraoDoiLocalService.class)
	protected YKienTraoDoiLocalService yKienTraoDoiLocalService;
	@BeanReference(type = YKienTraoDoiPersistence.class)
	protected YKienTraoDoiPersistence yKienTraoDoiPersistence;
	@BeanReference(type = YKienTraoDoiFinder.class)
	protected YKienTraoDoiFinder yKienTraoDoiFinder;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private static Log _log = LogFactoryUtil.getLog(YKienTraoDoiLocalServiceBaseImpl.class);
	private String _beanIdentifier;
}