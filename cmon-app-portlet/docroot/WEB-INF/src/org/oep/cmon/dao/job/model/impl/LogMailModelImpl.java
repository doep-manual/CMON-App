/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.job.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.cmon.dao.job.model.LogMail;
import org.oep.cmon.dao.job.model.LogMailModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the LogMail service. Represents a row in the &quot;JOB_LOGMAIL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.cmon.dao.job.model.LogMailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LogMailImpl}.
 * </p>
 *
 * @author BinhNT
 * @see LogMailImpl
 * @see org.oep.cmon.dao.job.model.LogMail
 * @see org.oep.cmon.dao.job.model.LogMailModel
 * @generated
 */
public class LogMailModelImpl extends BaseModelImpl<LogMail>
	implements LogMailModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a log mail model instance should use the {@link org.oep.cmon.dao.job.model.LogMail} interface instead.
	 */
	public static final String TABLE_NAME = "JOB_LOGMAIL";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "TYPE", Types.VARCHAR },
			{ "HOSOTTHCCONGID", Types.BIGINT },
			{ "CREATETIME", Types.TIMESTAMP },
			{ "STATUS", Types.INTEGER },
			{ "DESCRIPTION", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table JOB_LOGMAIL (ID LONG not null primary key,TYPE VARCHAR(75) null,HOSOTTHCCONGID LONG,CREATETIME DATE null,STATUS INTEGER,DESCRIPTION VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table JOB_LOGMAIL";
	public static final String ORDER_BY_JPQL = " ORDER BY logMail.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JOB_LOGMAIL.ID ASC";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.cmon.dao.job.model.LogMail"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.cmon.dao.job.model.LogMail"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.cmon.dao.job.model.LogMail"),
			true);
	public static long CREATETIME_COLUMN_BITMASK = 1L;
	public static long HOSOTTHCCONGID_COLUMN_BITMASK = 2L;
	public static long STATUS_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.cmon.dao.job.model.LogMail"));

	public LogMailModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return LogMail.class;
	}

	public String getModelClassName() {
		return LogMail.class.getName();
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	public void setType(String type) {
		_type = type;
	}

	public long getHoSoTTHCCongId() {
		return _hoSoTTHCCongId;
	}

	public void setHoSoTTHCCongId(long hoSoTTHCCongId) {
		_columnBitmask |= HOSOTTHCCONGID_COLUMN_BITMASK;

		if (!_setOriginalHoSoTTHCCongId) {
			_setOriginalHoSoTTHCCongId = true;

			_originalHoSoTTHCCongId = _hoSoTTHCCongId;
		}

		_hoSoTTHCCongId = hoSoTTHCCongId;
	}

	public long getOriginalHoSoTTHCCongId() {
		return _originalHoSoTTHCCongId;
	}

	public Date getCreateTime() {
		return _createTime;
	}

	public void setCreateTime(Date createTime) {
		_columnBitmask |= CREATETIME_COLUMN_BITMASK;

		if (_originalCreateTime == null) {
			_originalCreateTime = _createTime;
		}

		_createTime = createTime;
	}

	public Date getOriginalCreateTime() {
		return _originalCreateTime;
	}

	public int getStatus() {
		return _status;
	}

	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public LogMail toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (LogMail)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					LogMail.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		LogMailImpl logMailImpl = new LogMailImpl();

		logMailImpl.setId(getId());
		logMailImpl.setType(getType());
		logMailImpl.setHoSoTTHCCongId(getHoSoTTHCCongId());
		logMailImpl.setCreateTime(getCreateTime());
		logMailImpl.setStatus(getStatus());
		logMailImpl.setDescription(getDescription());

		logMailImpl.resetOriginalValues();

		return logMailImpl;
	}

	public int compareTo(LogMail logMail) {
		int value = 0;

		if (getId() < logMail.getId()) {
			value = -1;
		}
		else if (getId() > logMail.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		LogMail logMail = null;

		try {
			logMail = (LogMail)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = logMail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LogMailModelImpl logMailModelImpl = this;

		logMailModelImpl._originalHoSoTTHCCongId = logMailModelImpl._hoSoTTHCCongId;

		logMailModelImpl._setOriginalHoSoTTHCCongId = false;

		logMailModelImpl._originalCreateTime = logMailModelImpl._createTime;

		logMailModelImpl._originalStatus = logMailModelImpl._status;

		logMailModelImpl._setOriginalStatus = false;

		logMailModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LogMail> toCacheModel() {
		LogMailCacheModel logMailCacheModel = new LogMailCacheModel();

		logMailCacheModel.id = getId();

		logMailCacheModel.type = getType();

		String type = logMailCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			logMailCacheModel.type = null;
		}

		logMailCacheModel.hoSoTTHCCongId = getHoSoTTHCCongId();

		Date createTime = getCreateTime();

		if (createTime != null) {
			logMailCacheModel.createTime = createTime.getTime();
		}
		else {
			logMailCacheModel.createTime = Long.MIN_VALUE;
		}

		logMailCacheModel.status = getStatus();

		logMailCacheModel.description = getDescription();

		String description = logMailCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			logMailCacheModel.description = null;
		}

		return logMailCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", hoSoTTHCCongId=");
		sb.append(getHoSoTTHCCongId());
		sb.append(", createTime=");
		sb.append(getCreateTime());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("org.oep.cmon.dao.job.model.LogMail");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hoSoTTHCCongId</column-name><column-value><![CDATA[");
		sb.append(getHoSoTTHCCongId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createTime</column-name><column-value><![CDATA[");
		sb.append(getCreateTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LogMail.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			LogMail.class
		};
	private long _id;
	private String _type;
	private long _hoSoTTHCCongId;
	private long _originalHoSoTTHCCongId;
	private boolean _setOriginalHoSoTTHCCongId;
	private Date _createTime;
	private Date _originalCreateTime;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private String _description;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private LogMail _escapedModelProxy;
}