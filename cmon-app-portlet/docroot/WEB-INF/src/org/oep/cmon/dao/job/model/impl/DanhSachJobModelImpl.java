/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.job.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.cmon.dao.job.model.DanhSachJob;
import org.oep.cmon.dao.job.model.DanhSachJobModel;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the DanhSachJob service. Represents a row in the &quot;JOB_DANHSACHJOB&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.cmon.dao.job.model.DanhSachJobModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DanhSachJobImpl}.
 * </p>
 *
 * @author BinhNT
 * @see DanhSachJobImpl
 * @see org.oep.cmon.dao.job.model.DanhSachJob
 * @see org.oep.cmon.dao.job.model.DanhSachJobModel
 * @generated
 */
public class DanhSachJobModelImpl extends BaseModelImpl<DanhSachJob>
	implements DanhSachJobModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a danh sach job model instance should use the {@link org.oep.cmon.dao.job.model.DanhSachJob} interface instead.
	 */
	public static final String TABLE_NAME = "JOB_DANHSACHJOB";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "JobClass", Types.VARCHAR },
			{ "JobId", Types.INTEGER },
			{ "JobName", Types.VARCHAR },
			{ "Description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table JOB_DANHSACHJOB (ID LONG not null primary key,JobClass VARCHAR(75) null,JobId INTEGER,JobName VARCHAR(75) null,Description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table JOB_DANHSACHJOB";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.cmon.dao.job.model.DanhSachJob"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.cmon.dao.job.model.DanhSachJob"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.cmon.dao.job.model.DanhSachJob"),
			true);
	public static long JOBCLASS_COLUMN_BITMASK = 1L;
	public static long JOBID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.cmon.dao.job.model.DanhSachJob"));

	public DanhSachJobModelImpl() {
	}

	public long getPrimaryKey() {
		return _ID;
	}

	public void setPrimaryKey(long primaryKey) {
		setID(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_ID);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return DanhSachJob.class;
	}

	public String getModelClassName() {
		return DanhSachJob.class.getName();
	}

	public long getID() {
		return _ID;
	}

	public void setID(long ID) {
		_ID = ID;
	}

	public String getJobClass() {
		if (_JobClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _JobClass;
		}
	}

	public void setJobClass(String JobClass) {
		_columnBitmask |= JOBCLASS_COLUMN_BITMASK;

		if (_originalJobClass == null) {
			_originalJobClass = _JobClass;
		}

		_JobClass = JobClass;
	}

	public String getOriginalJobClass() {
		return GetterUtil.getString(_originalJobClass);
	}

	public int getJobId() {
		return _JobId;
	}

	public void setJobId(int JobId) {
		_columnBitmask |= JOBID_COLUMN_BITMASK;

		if (!_setOriginalJobId) {
			_setOriginalJobId = true;

			_originalJobId = _JobId;
		}

		_JobId = JobId;
	}

	public int getOriginalJobId() {
		return _originalJobId;
	}

	public String getJobName() {
		if (_JobName == null) {
			return StringPool.BLANK;
		}
		else {
			return _JobName;
		}
	}

	public void setJobName(String JobName) {
		_JobName = JobName;
	}

	public String getDescription() {
		if (_Description == null) {
			return StringPool.BLANK;
		}
		else {
			return _Description;
		}
	}

	public void setDescription(String Description) {
		_Description = Description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public DanhSachJob toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (DanhSachJob)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					DanhSachJob.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		DanhSachJobImpl danhSachJobImpl = new DanhSachJobImpl();

		danhSachJobImpl.setID(getID());
		danhSachJobImpl.setJobClass(getJobClass());
		danhSachJobImpl.setJobId(getJobId());
		danhSachJobImpl.setJobName(getJobName());
		danhSachJobImpl.setDescription(getDescription());

		danhSachJobImpl.resetOriginalValues();

		return danhSachJobImpl;
	}

	public int compareTo(DanhSachJob danhSachJob) {
		long primaryKey = danhSachJob.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		DanhSachJob danhSachJob = null;

		try {
			danhSachJob = (DanhSachJob)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = danhSachJob.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DanhSachJobModelImpl danhSachJobModelImpl = this;

		danhSachJobModelImpl._originalJobClass = danhSachJobModelImpl._JobClass;

		danhSachJobModelImpl._originalJobId = danhSachJobModelImpl._JobId;

		danhSachJobModelImpl._setOriginalJobId = false;

		danhSachJobModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DanhSachJob> toCacheModel() {
		DanhSachJobCacheModel danhSachJobCacheModel = new DanhSachJobCacheModel();

		danhSachJobCacheModel.ID = getID();

		danhSachJobCacheModel.JobClass = getJobClass();

		String JobClass = danhSachJobCacheModel.JobClass;

		if ((JobClass != null) && (JobClass.length() == 0)) {
			danhSachJobCacheModel.JobClass = null;
		}

		danhSachJobCacheModel.JobId = getJobId();

		danhSachJobCacheModel.JobName = getJobName();

		String JobName = danhSachJobCacheModel.JobName;

		if ((JobName != null) && (JobName.length() == 0)) {
			danhSachJobCacheModel.JobName = null;
		}

		danhSachJobCacheModel.Description = getDescription();

		String Description = danhSachJobCacheModel.Description;

		if ((Description != null) && (Description.length() == 0)) {
			danhSachJobCacheModel.Description = null;
		}

		return danhSachJobCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{ID=");
		sb.append(getID());
		sb.append(", JobClass=");
		sb.append(getJobClass());
		sb.append(", JobId=");
		sb.append(getJobId());
		sb.append(", JobName=");
		sb.append(getJobName());
		sb.append(", Description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("org.oep.cmon.dao.job.model.DanhSachJob");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ID</column-name><column-value><![CDATA[");
		sb.append(getID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JobClass</column-name><column-value><![CDATA[");
		sb.append(getJobClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JobId</column-name><column-value><![CDATA[");
		sb.append(getJobId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JobName</column-name><column-value><![CDATA[");
		sb.append(getJobName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DanhSachJob.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			DanhSachJob.class
		};
	private long _ID;
	private String _JobClass;
	private String _originalJobClass;
	private int _JobId;
	private int _originalJobId;
	private boolean _setOriginalJobId;
	private String _JobName;
	private String _Description;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private DanhSachJob _escapedModelProxy;
}