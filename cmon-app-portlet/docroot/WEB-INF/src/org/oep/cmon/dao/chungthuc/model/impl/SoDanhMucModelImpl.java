/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.chungthuc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.cmon.dao.chungthuc.model.SoDanhMuc;
import org.oep.cmon.dao.chungthuc.model.SoDanhMucModel;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the SoDanhMuc service. Represents a row in the &quot;CMON_SODANHMUC&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.cmon.dao.chungthuc.model.SoDanhMucModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SoDanhMucImpl}.
 * </p>
 *
 * @author vietho
 * @see SoDanhMucImpl
 * @see org.oep.cmon.dao.chungthuc.model.SoDanhMuc
 * @see org.oep.cmon.dao.chungthuc.model.SoDanhMucModel
 * @generated
 */
public class SoDanhMucModelImpl extends BaseModelImpl<SoDanhMuc>
	implements SoDanhMucModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a so danh muc model instance should use the {@link org.oep.cmon.dao.chungthuc.model.SoDanhMuc} interface instead.
	 */
	public static final String TABLE_NAME = "CMON_SODANHMUC";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "TENSO", Types.VARCHAR },
			{ "SOSO", Types.VARCHAR },
			{ "THUTUCHANHCHINHID", Types.BIGINT },
			{ "NAM", Types.BIGINT },
			{ "THEOQUYETDINH", Types.VARCHAR },
			{ "COQUANQUANLIID", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table CMON_SODANHMUC (ID LONG not null primary key,TENSO VARCHAR(75) null,SOSO VARCHAR(75) null,THUTUCHANHCHINHID LONG null,NAM LONG null,THEOQUYETDINH VARCHAR(75) null,COQUANQUANLIID LONG null)";
	public static final String TABLE_SQL_DROP = "drop table CMON_SODANHMUC";
	public static final String ORDER_BY_JPQL = " ORDER BY soDanhMuc.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CMON_SODANHMUC.ID ASC";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.cmon.dao.chungthuc.model.SoDanhMuc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.cmon.dao.chungthuc.model.SoDanhMuc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.cmon.dao.chungthuc.model.SoDanhMuc"),
			true);
	public static long COQUANQUANLIID_COLUMN_BITMASK = 1L;
	public static long THUTUCHANHCHINHID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.cmon.dao.chungthuc.model.SoDanhMuc"));

	public SoDanhMucModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return SoDanhMuc.class;
	}

	public String getModelClassName() {
		return SoDanhMuc.class.getName();
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	public String getTenSo() {
		return _tenSo;
	}

	public void setTenSo(String tenSo) {
		_tenSo = tenSo;
	}

	public String getSoSo() {
		return _soSo;
	}

	public void setSoSo(String soSo) {
		_soSo = soSo;
	}

	public Long getThuTucHanhChinhId() {
		return _thuTucHanhChinhId;
	}

	public void setThuTucHanhChinhId(Long thuTucHanhChinhId) {
		_columnBitmask |= THUTUCHANHCHINHID_COLUMN_BITMASK;

		if (!_setOriginalThuTucHanhChinhId) {
			_setOriginalThuTucHanhChinhId = true;

			_originalThuTucHanhChinhId = _thuTucHanhChinhId;
		}

		_thuTucHanhChinhId = thuTucHanhChinhId;
	}

	public Long getOriginalThuTucHanhChinhId() {
		return _originalThuTucHanhChinhId;
	}

	public Long getNam() {
		return _nam;
	}

	public void setNam(Long nam) {
		_nam = nam;
	}

	public String getTheoQuyetDinh() {
		return _theoQuyetDinh;
	}

	public void setTheoQuyetDinh(String theoQuyetDinh) {
		_theoQuyetDinh = theoQuyetDinh;
	}

	public Long getCoQuanQuanLiId() {
		return _coQuanQuanLiId;
	}

	public void setCoQuanQuanLiId(Long coQuanQuanLiId) {
		_columnBitmask |= COQUANQUANLIID_COLUMN_BITMASK;

		if (!_setOriginalCoQuanQuanLiId) {
			_setOriginalCoQuanQuanLiId = true;

			_originalCoQuanQuanLiId = _coQuanQuanLiId;
		}

		_coQuanQuanLiId = coQuanQuanLiId;
	}

	public Long getOriginalCoQuanQuanLiId() {
		return _originalCoQuanQuanLiId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public SoDanhMuc toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (SoDanhMuc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					SoDanhMuc.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		SoDanhMucImpl soDanhMucImpl = new SoDanhMucImpl();

		soDanhMucImpl.setId(getId());
		soDanhMucImpl.setTenSo(getTenSo());
		soDanhMucImpl.setSoSo(getSoSo());
		soDanhMucImpl.setThuTucHanhChinhId(getThuTucHanhChinhId());
		soDanhMucImpl.setNam(getNam());
		soDanhMucImpl.setTheoQuyetDinh(getTheoQuyetDinh());
		soDanhMucImpl.setCoQuanQuanLiId(getCoQuanQuanLiId());

		soDanhMucImpl.resetOriginalValues();

		return soDanhMucImpl;
	}

	public int compareTo(SoDanhMuc soDanhMuc) {
		int value = 0;

		if (getId() < soDanhMuc.getId()) {
			value = -1;
		}
		else if (getId() > soDanhMuc.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		SoDanhMuc soDanhMuc = null;

		try {
			soDanhMuc = (SoDanhMuc)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = soDanhMuc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SoDanhMucModelImpl soDanhMucModelImpl = this;

		soDanhMucModelImpl._originalThuTucHanhChinhId = soDanhMucModelImpl._thuTucHanhChinhId;

		soDanhMucModelImpl._setOriginalThuTucHanhChinhId = false;

		soDanhMucModelImpl._originalCoQuanQuanLiId = soDanhMucModelImpl._coQuanQuanLiId;

		soDanhMucModelImpl._setOriginalCoQuanQuanLiId = false;

		soDanhMucModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SoDanhMuc> toCacheModel() {
		SoDanhMucCacheModel soDanhMucCacheModel = new SoDanhMucCacheModel();

		soDanhMucCacheModel.id = getId();

		soDanhMucCacheModel.tenSo = getTenSo();

		String tenSo = soDanhMucCacheModel.tenSo;

		if ((tenSo != null) && (tenSo.length() == 0)) {
			soDanhMucCacheModel.tenSo = null;
		}

		soDanhMucCacheModel.soSo = getSoSo();

		String soSo = soDanhMucCacheModel.soSo;

		if ((soSo != null) && (soSo.length() == 0)) {
			soDanhMucCacheModel.soSo = null;
		}

		soDanhMucCacheModel.thuTucHanhChinhId = getThuTucHanhChinhId();

		soDanhMucCacheModel.nam = getNam();

		soDanhMucCacheModel.theoQuyetDinh = getTheoQuyetDinh();

		String theoQuyetDinh = soDanhMucCacheModel.theoQuyetDinh;

		if ((theoQuyetDinh != null) && (theoQuyetDinh.length() == 0)) {
			soDanhMucCacheModel.theoQuyetDinh = null;
		}

		soDanhMucCacheModel.coQuanQuanLiId = getCoQuanQuanLiId();

		return soDanhMucCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", tenSo=");
		sb.append(getTenSo());
		sb.append(", soSo=");
		sb.append(getSoSo());
		sb.append(", thuTucHanhChinhId=");
		sb.append(getThuTucHanhChinhId());
		sb.append(", nam=");
		sb.append(getNam());
		sb.append(", theoQuyetDinh=");
		sb.append(getTheoQuyetDinh());
		sb.append(", coQuanQuanLiId=");
		sb.append(getCoQuanQuanLiId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("org.oep.cmon.dao.chungthuc.model.SoDanhMuc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenSo</column-name><column-value><![CDATA[");
		sb.append(getTenSo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soSo</column-name><column-value><![CDATA[");
		sb.append(getSoSo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thuTucHanhChinhId</column-name><column-value><![CDATA[");
		sb.append(getThuTucHanhChinhId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nam</column-name><column-value><![CDATA[");
		sb.append(getNam());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>theoQuyetDinh</column-name><column-value><![CDATA[");
		sb.append(getTheoQuyetDinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coQuanQuanLiId</column-name><column-value><![CDATA[");
		sb.append(getCoQuanQuanLiId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SoDanhMuc.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			SoDanhMuc.class
		};
	private long _id;
	private String _tenSo;
	private String _soSo;
	private Long _thuTucHanhChinhId;
	private Long _originalThuTucHanhChinhId;
	private boolean _setOriginalThuTucHanhChinhId;
	private Long _nam;
	private String _theoQuyetDinh;
	private Long _coQuanQuanLiId;
	private Long _originalCoQuanQuanLiId;
	private boolean _setOriginalCoQuanQuanLiId;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private SoDanhMuc _escapedModelProxy;
}