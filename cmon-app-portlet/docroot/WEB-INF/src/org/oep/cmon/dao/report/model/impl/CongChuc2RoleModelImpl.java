/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.report.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.cmon.dao.report.model.CongChuc2Role;
import org.oep.cmon.dao.report.model.CongChuc2RoleModel;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the CongChuc2Role service. Represents a row in the &quot;CMON_RPNGUOIDUNG2ROLE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.cmon.dao.report.model.CongChuc2RoleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CongChuc2RoleImpl}.
 * </p>
 *
 * @author VIENPN
 * @see CongChuc2RoleImpl
 * @see org.oep.cmon.dao.report.model.CongChuc2Role
 * @see org.oep.cmon.dao.report.model.CongChuc2RoleModel
 * @generated
 */
public class CongChuc2RoleModelImpl extends BaseModelImpl<CongChuc2Role>
	implements CongChuc2RoleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cong chuc2 role model instance should use the {@link org.oep.cmon.dao.report.model.CongChuc2Role} interface instead.
	 */
	public static final String TABLE_NAME = "CMON_RPNGUOIDUNG2ROLE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "TAIKHOANNGUOIDUNGID", Types.BIGINT },
			{ "RPDANHMUCROLEID", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table CMON_RPNGUOIDUNG2ROLE (ID LONG not null primary key,TAIKHOANNGUOIDUNGID LONG,RPDANHMUCROLEID LONG)";
	public static final String TABLE_SQL_DROP = "drop table CMON_RPNGUOIDUNG2ROLE";
	public static final String ORDER_BY_JPQL = " ORDER BY congChuc2Role.ID DESC";
	public static final String ORDER_BY_SQL = " ORDER BY CMON_RPNGUOIDUNG2ROLE.ID DESC";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.cmon.dao.report.model.CongChuc2Role"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.cmon.dao.report.model.CongChuc2Role"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.cmon.dao.report.model.CongChuc2Role"));

	public CongChuc2RoleModelImpl() {
	}

	public long getPrimaryKey() {
		return _ID;
	}

	public void setPrimaryKey(long primaryKey) {
		setID(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_ID);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return CongChuc2Role.class;
	}

	public String getModelClassName() {
		return CongChuc2Role.class.getName();
	}

	public long getID() {
		return _ID;
	}

	public void setID(long ID) {
		_ID = ID;
	}

	public long getCONGCHUCID() {
		return _CONGCHUCID;
	}

	public void setCONGCHUCID(long CONGCHUCID) {
		_CONGCHUCID = CONGCHUCID;
	}

	public long getRPDANHMUCROLEID() {
		return _RPDANHMUCROLEID;
	}

	public void setRPDANHMUCROLEID(long RPDANHMUCROLEID) {
		_RPDANHMUCROLEID = RPDANHMUCROLEID;
	}

	@Override
	public CongChuc2Role toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (CongChuc2Role)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					CongChuc2Role.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		CongChuc2RoleImpl congChuc2RoleImpl = new CongChuc2RoleImpl();

		congChuc2RoleImpl.setID(getID());
		congChuc2RoleImpl.setCONGCHUCID(getCONGCHUCID());
		congChuc2RoleImpl.setRPDANHMUCROLEID(getRPDANHMUCROLEID());

		congChuc2RoleImpl.resetOriginalValues();

		return congChuc2RoleImpl;
	}

	public int compareTo(CongChuc2Role congChuc2Role) {
		int value = 0;

		if (getID() < congChuc2Role.getID()) {
			value = -1;
		}
		else if (getID() > congChuc2Role.getID()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		CongChuc2Role congChuc2Role = null;

		try {
			congChuc2Role = (CongChuc2Role)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = congChuc2Role.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CongChuc2Role> toCacheModel() {
		CongChuc2RoleCacheModel congChuc2RoleCacheModel = new CongChuc2RoleCacheModel();

		congChuc2RoleCacheModel.ID = getID();

		congChuc2RoleCacheModel.CONGCHUCID = getCONGCHUCID();

		congChuc2RoleCacheModel.RPDANHMUCROLEID = getRPDANHMUCROLEID();

		return congChuc2RoleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{ID=");
		sb.append(getID());
		sb.append(", CONGCHUCID=");
		sb.append(getCONGCHUCID());
		sb.append(", RPDANHMUCROLEID=");
		sb.append(getRPDANHMUCROLEID());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("org.oep.cmon.dao.report.model.CongChuc2Role");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ID</column-name><column-value><![CDATA[");
		sb.append(getID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CONGCHUCID</column-name><column-value><![CDATA[");
		sb.append(getCONGCHUCID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RPDANHMUCROLEID</column-name><column-value><![CDATA[");
		sb.append(getRPDANHMUCROLEID());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CongChuc2Role.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			CongChuc2Role.class
		};
	private long _ID;
	private long _CONGCHUCID;
	private long _RPDANHMUCROLEID;
	private transient ExpandoBridge _expandoBridge;
	private CongChuc2Role _escapedModelProxy;
}