/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.job.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.cmon.dao.job.model.TrangThaiJob;
import org.oep.cmon.dao.job.model.TrangThaiJobModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the TrangThaiJob service. Represents a row in the &quot;JOB_TRANGTHAIJOB&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.cmon.dao.job.model.TrangThaiJobModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TrangThaiJobImpl}.
 * </p>
 *
 * @author BinhNT
 * @see TrangThaiJobImpl
 * @see org.oep.cmon.dao.job.model.TrangThaiJob
 * @see org.oep.cmon.dao.job.model.TrangThaiJobModel
 * @generated
 */
public class TrangThaiJobModelImpl extends BaseModelImpl<TrangThaiJob>
	implements TrangThaiJobModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a trang thai job model instance should use the {@link org.oep.cmon.dao.job.model.TrangThaiJob} interface instead.
	 */
	public static final String TABLE_NAME = "JOB_TRANGTHAIJOB";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "JobId", Types.INTEGER },
			{ "JobName", Types.VARCHAR },
			{ "StartTime", Types.TIMESTAMP },
			{ "EndTime", Types.TIMESTAMP },
			{ "Status", Types.INTEGER },
			{ "RunMode", Types.INTEGER },
			{ "Message", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table JOB_TRANGTHAIJOB (ID LONG not null primary key,JobId INTEGER,JobName VARCHAR(75) null,StartTime DATE null,EndTime DATE null,Status INTEGER,RunMode INTEGER,Message VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table JOB_TRANGTHAIJOB";
	public static final String ORDER_BY_JPQL = " ORDER BY trangThaiJob.ID DESC";
	public static final String ORDER_BY_SQL = " ORDER BY JOB_TRANGTHAIJOB.ID DESC";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.cmon.dao.job.model.TrangThaiJob"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.cmon.dao.job.model.TrangThaiJob"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.cmon.dao.job.model.TrangThaiJob"),
			true);
	public static long JOBID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.cmon.dao.job.model.TrangThaiJob"));

	public TrangThaiJobModelImpl() {
	}

	public long getPrimaryKey() {
		return _ID;
	}

	public void setPrimaryKey(long primaryKey) {
		setID(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_ID);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return TrangThaiJob.class;
	}

	public String getModelClassName() {
		return TrangThaiJob.class.getName();
	}

	public long getID() {
		return _ID;
	}

	public void setID(long ID) {
		_columnBitmask = -1L;

		_ID = ID;
	}

	public int getJobId() {
		return _JobId;
	}

	public void setJobId(int JobId) {
		_columnBitmask |= JOBID_COLUMN_BITMASK;

		if (!_setOriginalJobId) {
			_setOriginalJobId = true;

			_originalJobId = _JobId;
		}

		_JobId = JobId;
	}

	public int getOriginalJobId() {
		return _originalJobId;
	}

	public String getJobName() {
		if (_JobName == null) {
			return StringPool.BLANK;
		}
		else {
			return _JobName;
		}
	}

	public void setJobName(String JobName) {
		_JobName = JobName;
	}

	public Date getStartTime() {
		return _StartTime;
	}

	public void setStartTime(Date StartTime) {
		_StartTime = StartTime;
	}

	public Date getEndTime() {
		return _EndTime;
	}

	public void setEndTime(Date EndTime) {
		_EndTime = EndTime;
	}

	public int getStatus() {
		return _Status;
	}

	public void setStatus(int Status) {
		_Status = Status;
	}

	public int getRunMode() {
		return _RunMode;
	}

	public void setRunMode(int RunMode) {
		_RunMode = RunMode;
	}

	public String getMessage() {
		if (_Message == null) {
			return StringPool.BLANK;
		}
		else {
			return _Message;
		}
	}

	public void setMessage(String Message) {
		_Message = Message;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public TrangThaiJob toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (TrangThaiJob)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					TrangThaiJob.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		TrangThaiJobImpl trangThaiJobImpl = new TrangThaiJobImpl();

		trangThaiJobImpl.setID(getID());
		trangThaiJobImpl.setJobId(getJobId());
		trangThaiJobImpl.setJobName(getJobName());
		trangThaiJobImpl.setStartTime(getStartTime());
		trangThaiJobImpl.setEndTime(getEndTime());
		trangThaiJobImpl.setStatus(getStatus());
		trangThaiJobImpl.setRunMode(getRunMode());
		trangThaiJobImpl.setMessage(getMessage());

		trangThaiJobImpl.resetOriginalValues();

		return trangThaiJobImpl;
	}

	public int compareTo(TrangThaiJob trangThaiJob) {
		int value = 0;

		if (getID() < trangThaiJob.getID()) {
			value = -1;
		}
		else if (getID() > trangThaiJob.getID()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TrangThaiJob trangThaiJob = null;

		try {
			trangThaiJob = (TrangThaiJob)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = trangThaiJob.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TrangThaiJobModelImpl trangThaiJobModelImpl = this;

		trangThaiJobModelImpl._originalJobId = trangThaiJobModelImpl._JobId;

		trangThaiJobModelImpl._setOriginalJobId = false;

		trangThaiJobModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TrangThaiJob> toCacheModel() {
		TrangThaiJobCacheModel trangThaiJobCacheModel = new TrangThaiJobCacheModel();

		trangThaiJobCacheModel.ID = getID();

		trangThaiJobCacheModel.JobId = getJobId();

		trangThaiJobCacheModel.JobName = getJobName();

		String JobName = trangThaiJobCacheModel.JobName;

		if ((JobName != null) && (JobName.length() == 0)) {
			trangThaiJobCacheModel.JobName = null;
		}

		Date StartTime = getStartTime();

		if (StartTime != null) {
			trangThaiJobCacheModel.StartTime = StartTime.getTime();
		}
		else {
			trangThaiJobCacheModel.StartTime = Long.MIN_VALUE;
		}

		Date EndTime = getEndTime();

		if (EndTime != null) {
			trangThaiJobCacheModel.EndTime = EndTime.getTime();
		}
		else {
			trangThaiJobCacheModel.EndTime = Long.MIN_VALUE;
		}

		trangThaiJobCacheModel.Status = getStatus();

		trangThaiJobCacheModel.RunMode = getRunMode();

		trangThaiJobCacheModel.Message = getMessage();

		String Message = trangThaiJobCacheModel.Message;

		if ((Message != null) && (Message.length() == 0)) {
			trangThaiJobCacheModel.Message = null;
		}

		return trangThaiJobCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{ID=");
		sb.append(getID());
		sb.append(", JobId=");
		sb.append(getJobId());
		sb.append(", JobName=");
		sb.append(getJobName());
		sb.append(", StartTime=");
		sb.append(getStartTime());
		sb.append(", EndTime=");
		sb.append(getEndTime());
		sb.append(", Status=");
		sb.append(getStatus());
		sb.append(", RunMode=");
		sb.append(getRunMode());
		sb.append(", Message=");
		sb.append(getMessage());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("org.oep.cmon.dao.job.model.TrangThaiJob");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ID</column-name><column-value><![CDATA[");
		sb.append(getID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JobId</column-name><column-value><![CDATA[");
		sb.append(getJobId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JobName</column-name><column-value><![CDATA[");
		sb.append(getJobName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>StartTime</column-name><column-value><![CDATA[");
		sb.append(getStartTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EndTime</column-name><column-value><![CDATA[");
		sb.append(getEndTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>RunMode</column-name><column-value><![CDATA[");
		sb.append(getRunMode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Message</column-name><column-value><![CDATA[");
		sb.append(getMessage());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TrangThaiJob.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			TrangThaiJob.class
		};
	private long _ID;
	private int _JobId;
	private int _originalJobId;
	private boolean _setOriginalJobId;
	private String _JobName;
	private Date _StartTime;
	private Date _EndTime;
	private int _Status;
	private int _RunMode;
	private String _Message;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private TrangThaiJob _escapedModelProxy;
}