/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.dlms.dao.danhmucgiaypheplaixe.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;


import java.io.Serializable;

import java.sql.Types;

import java.util.Date;

import org.oep.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt;
import org.oep.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvtModel;

/**
 * The base model implementation for the DonViGtvt service. Represents a row in the &quot;DLMS_DONVIGTVT&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvtModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DonViGtvtImpl}.
 * </p>
 *
 * @author AnhNT
 * @see DonViGtvtImpl
 * @see org.oep.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt
 * @see org.oep.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvtModel
 * @generated
 */
public class DonViGtvtModelImpl extends BaseModelImpl<DonViGtvt>
	implements DonViGtvtModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a don vi gtvt model instance should use the {@link vn.dtt.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt} interface instead.
	 */
	public static final String TABLE_NAME = "DLMS_DONVIGTVT";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "MA", Types.VARCHAR },
			{ "TEN", Types.VARCHAR },
			{ "COQUANQL", Types.VARCHAR },
			{ "DIENTHOAI", Types.VARCHAR },
			{ "FAX", Types.VARCHAR },
			{ "DIACHI", Types.VARCHAR },
			{ "LANHDAO", Types.VARCHAR },
			{ "NGAYTAO", Types.TIMESTAMP },
			{ "NGAYSUA", Types.TIMESTAMP },
			{ "NGUOITAO", Types.VARCHAR },
			{ "NGUOISUA", Types.VARCHAR },
			{ "DAXOA", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table DLMS_DONVIGTVT (ID LONG not null primary key,MA VARCHAR(75) null,TEN VARCHAR(75) null,COQUANQL VARCHAR(75) null,DIENTHOAI VARCHAR(75) null,FAX VARCHAR(75) null,DIACHI VARCHAR(75) null,LANHDAO VARCHAR(75) null,NGAYTAO DATE null,NGAYSUA DATE null,NGUOITAO VARCHAR(75) null,NGUOISUA VARCHAR(75) null,DAXOA INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table DLMS_DONVIGTVT";
	public static final String ORDER_BY_JPQL = " ORDER BY donViGtvt.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DLMS_DONVIGTVT.ID ASC";
	public static final String DATA_SOURCE = "egovDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.dtt.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.dtt.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.dtt.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt"));

	public DonViGtvtModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return DonViGtvt.class;
	}

	public String getModelClassName() {
		return DonViGtvt.class.getName();
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public String getMa() {
		if (_ma == null) {
			return StringPool.BLANK;
		}
		else {
			return _ma;
		}
	}

	public void setMa(String ma) {
		_ma = ma;
	}

	public String getTen() {
		if (_ten == null) {
			return StringPool.BLANK;
		}
		else {
			return _ten;
		}
	}

	public void setTen(String ten) {
		_ten = ten;
	}

	public String getCoQuanQl() {
		if (_coQuanQl == null) {
			return StringPool.BLANK;
		}
		else {
			return _coQuanQl;
		}
	}

	public void setCoQuanQl(String coQuanQl) {
		_coQuanQl = coQuanQl;
	}

	public String getDienThoai() {
		if (_dienThoai == null) {
			return StringPool.BLANK;
		}
		else {
			return _dienThoai;
		}
	}

	public void setDienThoai(String dienThoai) {
		_dienThoai = dienThoai;
	}

	public String getFax() {
		if (_fax == null) {
			return StringPool.BLANK;
		}
		else {
			return _fax;
		}
	}

	public void setFax(String fax) {
		_fax = fax;
	}

	public String getDiaChi() {
		if (_diaChi == null) {
			return StringPool.BLANK;
		}
		else {
			return _diaChi;
		}
	}

	public void setDiaChi(String diaChi) {
		_diaChi = diaChi;
	}

	public String getLanhDao() {
		if (_lanhDao == null) {
			return StringPool.BLANK;
		}
		else {
			return _lanhDao;
		}
	}

	public void setLanhDao(String lanhDao) {
		_lanhDao = lanhDao;
	}

	public Date getNgayTao() {
		return _ngayTao;
	}

	public void setNgayTao(Date ngayTao) {
		_ngayTao = ngayTao;
	}

	public Date getNgaySua() {
		return _ngaySua;
	}

	public void setNgaySua(Date ngaySua) {
		_ngaySua = ngaySua;
	}

	public String getNguoiTao() {
		if (_nguoiTao == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiTao;
		}
	}

	public void setNguoiTao(String nguoiTao) {
		_nguoiTao = nguoiTao;
	}

	public String getNguoiSua() {
		if (_nguoiSua == null) {
			return StringPool.BLANK;
		}
		else {
			return _nguoiSua;
		}
	}

	public void setNguoiSua(String nguoiSua) {
		_nguoiSua = nguoiSua;
	}

	public int getXoa() {
		return _xoa;
	}

	public void setXoa(int xoa) {
		_xoa = xoa;
	}

	@Override
	public DonViGtvt toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (DonViGtvt)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					DonViGtvt.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		DonViGtvtImpl donViGtvtImpl = new DonViGtvtImpl();

		donViGtvtImpl.setId(getId());
		donViGtvtImpl.setMa(getMa());
		donViGtvtImpl.setTen(getTen());
		donViGtvtImpl.setCoQuanQl(getCoQuanQl());
		donViGtvtImpl.setDienThoai(getDienThoai());
		donViGtvtImpl.setFax(getFax());
		donViGtvtImpl.setDiaChi(getDiaChi());
		donViGtvtImpl.setLanhDao(getLanhDao());
		donViGtvtImpl.setNgayTao(getNgayTao());
		donViGtvtImpl.setNgaySua(getNgaySua());
		donViGtvtImpl.setNguoiTao(getNguoiTao());
		donViGtvtImpl.setNguoiSua(getNguoiSua());
		donViGtvtImpl.setXoa(getXoa());

		donViGtvtImpl.resetOriginalValues();

		return donViGtvtImpl;
	}

	public int compareTo(DonViGtvt donViGtvt) {
		int value = 0;

		if (getId() < donViGtvt.getId()) {
			value = -1;
		}
		else if (getId() > donViGtvt.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		DonViGtvt donViGtvt = null;

		try {
			donViGtvt = (DonViGtvt)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = donViGtvt.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<DonViGtvt> toCacheModel() {
		DonViGtvtCacheModel donViGtvtCacheModel = new DonViGtvtCacheModel();

		donViGtvtCacheModel.id = getId();

		donViGtvtCacheModel.ma = getMa();

		String ma = donViGtvtCacheModel.ma;

		if ((ma != null) && (ma.length() == 0)) {
			donViGtvtCacheModel.ma = null;
		}

		donViGtvtCacheModel.ten = getTen();

		String ten = donViGtvtCacheModel.ten;

		if ((ten != null) && (ten.length() == 0)) {
			donViGtvtCacheModel.ten = null;
		}

		donViGtvtCacheModel.coQuanQl = getCoQuanQl();

		String coQuanQl = donViGtvtCacheModel.coQuanQl;

		if ((coQuanQl != null) && (coQuanQl.length() == 0)) {
			donViGtvtCacheModel.coQuanQl = null;
		}

		donViGtvtCacheModel.dienThoai = getDienThoai();

		String dienThoai = donViGtvtCacheModel.dienThoai;

		if ((dienThoai != null) && (dienThoai.length() == 0)) {
			donViGtvtCacheModel.dienThoai = null;
		}

		donViGtvtCacheModel.fax = getFax();

		String fax = donViGtvtCacheModel.fax;

		if ((fax != null) && (fax.length() == 0)) {
			donViGtvtCacheModel.fax = null;
		}

		donViGtvtCacheModel.diaChi = getDiaChi();

		String diaChi = donViGtvtCacheModel.diaChi;

		if ((diaChi != null) && (diaChi.length() == 0)) {
			donViGtvtCacheModel.diaChi = null;
		}

		donViGtvtCacheModel.lanhDao = getLanhDao();

		String lanhDao = donViGtvtCacheModel.lanhDao;

		if ((lanhDao != null) && (lanhDao.length() == 0)) {
			donViGtvtCacheModel.lanhDao = null;
		}

		Date ngayTao = getNgayTao();

		if (ngayTao != null) {
			donViGtvtCacheModel.ngayTao = ngayTao.getTime();
		}
		else {
			donViGtvtCacheModel.ngayTao = Long.MIN_VALUE;
		}

		Date ngaySua = getNgaySua();

		if (ngaySua != null) {
			donViGtvtCacheModel.ngaySua = ngaySua.getTime();
		}
		else {
			donViGtvtCacheModel.ngaySua = Long.MIN_VALUE;
		}

		donViGtvtCacheModel.nguoiTao = getNguoiTao();

		String nguoiTao = donViGtvtCacheModel.nguoiTao;

		if ((nguoiTao != null) && (nguoiTao.length() == 0)) {
			donViGtvtCacheModel.nguoiTao = null;
		}

		donViGtvtCacheModel.nguoiSua = getNguoiSua();

		String nguoiSua = donViGtvtCacheModel.nguoiSua;

		if ((nguoiSua != null) && (nguoiSua.length() == 0)) {
			donViGtvtCacheModel.nguoiSua = null;
		}

		donViGtvtCacheModel.xoa = getXoa();

		return donViGtvtCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", ma=");
		sb.append(getMa());
		sb.append(", ten=");
		sb.append(getTen());
		sb.append(", coQuanQl=");
		sb.append(getCoQuanQl());
		sb.append(", dienThoai=");
		sb.append(getDienThoai());
		sb.append(", fax=");
		sb.append(getFax());
		sb.append(", diaChi=");
		sb.append(getDiaChi());
		sb.append(", lanhDao=");
		sb.append(getLanhDao());
		sb.append(", ngayTao=");
		sb.append(getNgayTao());
		sb.append(", ngaySua=");
		sb.append(getNgaySua());
		sb.append(", nguoiTao=");
		sb.append(getNguoiTao());
		sb.append(", nguoiSua=");
		sb.append(getNguoiSua());
		sb.append(", xoa=");
		sb.append(getXoa());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("vn.dtt.dlms.dao.danhmucgiaypheplaixe.model.DonViGtvt");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ma</column-name><column-value><![CDATA[");
		sb.append(getMa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ten</column-name><column-value><![CDATA[");
		sb.append(getTen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coQuanQl</column-name><column-value><![CDATA[");
		sb.append(getCoQuanQl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dienThoai</column-name><column-value><![CDATA[");
		sb.append(getDienThoai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fax</column-name><column-value><![CDATA[");
		sb.append(getFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diaChi</column-name><column-value><![CDATA[");
		sb.append(getDiaChi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lanhDao</column-name><column-value><![CDATA[");
		sb.append(getLanhDao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTao</column-name><column-value><![CDATA[");
		sb.append(getNgayTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngaySua</column-name><column-value><![CDATA[");
		sb.append(getNgaySua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiTao</column-name><column-value><![CDATA[");
		sb.append(getNguoiTao());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiSua</column-name><column-value><![CDATA[");
		sb.append(getNguoiSua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xoa</column-name><column-value><![CDATA[");
		sb.append(getXoa());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DonViGtvt.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			DonViGtvt.class
		};
	private long _id;
	private String _ma;
	private String _ten;
	private String _coQuanQl;
	private String _dienThoai;
	private String _fax;
	private String _diaChi;
	private String _lanhDao;
	private Date _ngayTao;
	private Date _ngaySua;
	private String _nguoiTao;
	private String _nguoiSua;
	private int _xoa;
	private transient ExpandoBridge _expandoBridge;
	private DonViGtvt _escapedModelProxy;
}