/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.cmon.dao.dn.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DoanhNghiep2NganhNghe service. Represents a row in the &quot;BRMS_DOANHNGHIEP2NGANHNGHE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.oep.cmon.dao.dn.model.impl.DoanhNghiep2NganhNgheModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.oep.cmon.dao.dn.model.impl.DoanhNghiep2NganhNgheImpl}.
 * </p>
 *
 * @author Liemnn
 * @see DoanhNghiep2NganhNghe
 * @see org.oep.cmon.dao.dn.model.impl.DoanhNghiep2NganhNgheImpl
 * @see org.oep.cmon.dao.dn.model.impl.DoanhNghiep2NganhNgheModelImpl
 * @generated
 */
public interface DoanhNghiep2NganhNgheModel extends BaseModel<DoanhNghiep2NganhNghe> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a doanh nghiep2 nganh nghe model instance should use the {@link DoanhNghiep2NganhNghe} interface instead.
	 */

	/**
	 * Returns the primary key of this doanh nghiep2 nganh nghe.
	 *
	 * @return the primary key of this doanh nghiep2 nganh nghe
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this doanh nghiep2 nganh nghe.
	 *
	 * @param primaryKey the primary key of this doanh nghiep2 nganh nghe
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this doanh nghiep2 nganh nghe.
	 *
	 * @return the ID of this doanh nghiep2 nganh nghe
	 */
	public long getId();

	/**
	 * Sets the ID of this doanh nghiep2 nganh nghe.
	 *
	 * @param id the ID of this doanh nghiep2 nganh nghe
	 */
	public void setId(long id);

	/**
	 * Returns the la nganh chinh of this doanh nghiep2 nganh nghe.
	 *
	 * @return the la nganh chinh of this doanh nghiep2 nganh nghe
	 */
	public int getLaNganhChinh();

	/**
	 * Sets the la nganh chinh of this doanh nghiep2 nganh nghe.
	 *
	 * @param laNganhChinh the la nganh chinh of this doanh nghiep2 nganh nghe
	 */
	public void setLaNganhChinh(int laNganhChinh);

	/**
	 * Returns the ngay tao of this doanh nghiep2 nganh nghe.
	 *
	 * @return the ngay tao of this doanh nghiep2 nganh nghe
	 */
	public Date getNgayTao();

	/**
	 * Sets the ngay tao of this doanh nghiep2 nganh nghe.
	 *
	 * @param ngayTao the ngay tao of this doanh nghiep2 nganh nghe
	 */
	public void setNgayTao(Date ngayTao);

	/**
	 * Returns the ngay sua of this doanh nghiep2 nganh nghe.
	 *
	 * @return the ngay sua of this doanh nghiep2 nganh nghe
	 */
	public Date getNgaySua();

	/**
	 * Sets the ngay sua of this doanh nghiep2 nganh nghe.
	 *
	 * @param ngaySua the ngay sua of this doanh nghiep2 nganh nghe
	 */
	public void setNgaySua(Date ngaySua);

	/**
	 * Returns the nguoi tao of this doanh nghiep2 nganh nghe.
	 *
	 * @return the nguoi tao of this doanh nghiep2 nganh nghe
	 */
	@AutoEscape
	public String getNguoiTao();

	/**
	 * Sets the nguoi tao of this doanh nghiep2 nganh nghe.
	 *
	 * @param nguoiTao the nguoi tao of this doanh nghiep2 nganh nghe
	 */
	public void setNguoiTao(String nguoiTao);

	/**
	 * Returns the nguoi sua of this doanh nghiep2 nganh nghe.
	 *
	 * @return the nguoi sua of this doanh nghiep2 nganh nghe
	 */
	@AutoEscape
	public String getNguoiSua();

	/**
	 * Sets the nguoi sua of this doanh nghiep2 nganh nghe.
	 *
	 * @param nguoiSua the nguoi sua of this doanh nghiep2 nganh nghe
	 */
	public void setNguoiSua(String nguoiSua);

	/**
	 * Returns the da xoa of this doanh nghiep2 nganh nghe.
	 *
	 * @return the da xoa of this doanh nghiep2 nganh nghe
	 */
	public int getDaXoa();

	/**
	 * Sets the da xoa of this doanh nghiep2 nganh nghe.
	 *
	 * @param daXoa the da xoa of this doanh nghiep2 nganh nghe
	 */
	public void setDaXoa(int daXoa);

	/**
	 * Returns the doanh nghiep ID of this doanh nghiep2 nganh nghe.
	 *
	 * @return the doanh nghiep ID of this doanh nghiep2 nganh nghe
	 */
	public long getDoanhNghiepId();

	/**
	 * Sets the doanh nghiep ID of this doanh nghiep2 nganh nghe.
	 *
	 * @param doanhNghiepId the doanh nghiep ID of this doanh nghiep2 nganh nghe
	 */
	public void setDoanhNghiepId(long doanhNghiepId);

	/**
	 * Returns the nganh nghe ID of this doanh nghiep2 nganh nghe.
	 *
	 * @return the nganh nghe ID of this doanh nghiep2 nganh nghe
	 */
	public long getNganhNgheId();

	/**
	 * Sets the nganh nghe ID of this doanh nghiep2 nganh nghe.
	 *
	 * @param nganhNgheId the nganh nghe ID of this doanh nghiep2 nganh nghe
	 */
	public void setNganhNgheId(long nganhNgheId);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(DoanhNghiep2NganhNghe doanhNghiep2NganhNghe);

	public int hashCode();

	public CacheModel<DoanhNghiep2NganhNghe> toCacheModel();

	public DoanhNghiep2NganhNghe toEscapedModel();

	public String toString();

	public String toXmlString();
}